{
    "version": "https://jsonfeed.org/version/1",
    "title": "Eucliの小窝 • All posts by \"nginx\" tag",
    "description": null,
    "home_page_url": "https://eucli.top",
    "items": [
        {
            "id": "https://eucli.top/2023/09/29/Nginx/",
            "url": "https://eucli.top/2023/09/29/Nginx/",
            "title": "Nginx",
            "date_published": "2023-09-29T10:45:48.000Z",
            "content_html": "<h1 id=\"nginx\"><a class=\"anchor\" href=\"#nginx\">#</a> Nginx</h1>\n<h2 id=\"介绍-nginx\"><a class=\"anchor\" href=\"#介绍-nginx\">#</a> 介绍 Nginx</h2>\n<p>Nginx (engine x) 是一个高性能的 HTTP 和反向代理 web 服务器，同时也提供了 IMAP/POP3/SMTP 服务。<br />\nNginx 是一个安装非常的简单、配置文件非常简洁（还能够支持 perl 语法）、Bug 非常少的服务。Nginx 启动特别容易，并且几乎可以做到 7*24 不间断运行，即使运行数个月也不需要重新启动。你还能够不间断服务的情况下进行软件版本的升级。<br />\nNginx 代码完全用 C 语言从头写成。官方数据测试表明能够支持高达 50,000 个并发连接数的响应。</p>\n<ul>\n<li>高并发，大流量：需要面对高并发用户，大流量访问。举个例子，去往迪拜的飞机有 200 张票，但是有 100w 人都挤进系统买票，如何让这 100w 人能够看到票务的实时更新，以及顺利的买到一张票，都是一个网站架构师应该考虑的问题。这也许对于淘宝的 “双十一” 1000w 的一分钟独立访问用户量来说，是个微不足道的数字，但是对于用户的体验以及网站的口碑来说，都是一项不小的挑战</li>\n</ul>\n<ol>\n<li>正向代理 反向代理</li>\n</ol>\n<ul>\n<li>\n<p>正向代理<br />\n nginx 不仅可以做反向代理，还能用作正向代理来进行上网等功能。如果把局域网外的 Internet 想象成一个巨大的资源库，则局域网中的客户端要访问 Internet，则需要通过代理服务器来访问，这种代理服务就称为正向代理（也就是大家常说的，通过正向代理进行上网功能）<br />\n<img data-src=\"https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/0c67609bbc754e92af95cfab0c1299ee.png\" alt=\"\" /><br />\n<img data-src=\"https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/kuangstudy46bdad36-d3e0-43b0-a223-43360b7e8fc7.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>反向代理<br />\n反向代理实际运行方式是代理服务器接受网络上的连接请求。它将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给网络上请求连接的客户端，此时代理服务器对外就表现为一个服务器。<br />\n<img data-src=\"https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/783284cf6b014109a6464b533c15ff00.png\" alt=\"\" /><br />\n<img data-src=\"https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/kuangstudy62a15097-6e2a-4dbe-bcf5-f0d7cab81089.png\" alt=\"\" /></p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>负载均衡（upstream）</li>\n</ol>\n<ul>\n<li>轮询<br />\n轮询方式是 Nginx 负载默认的方式，顾名思义，所有请求都按照时间顺序分配到不同的服务上，如果服务 Down 掉，可以自动剔除</li>\n<li>权重<br />\n指定每个服务的权重比例，weight 和访问比率成正比，通常用于后端服务机器性能不统一，将性能好的分配权重高来发挥服务器最大性能</li>\n</ul>\n<ol start=\"3\">\n<li>动静分离<br />\n在 Web 开发中，通常来说，动态资源其实就是指那些后台资源，而静态资源就是指 HTML，JavaScript，CSS，img 等文件。</li>\n</ol>\n<p>一般来说，都需要将动态资源和静态资源分开，将静态资源部署在 Nginx 上，当一个请求来的时候，如果是静态资源的请求，就直接到 nginx 配置的静态资源目录下面获取资源，如果是动态资源的请求，nginx 利用反向代理的原理，把请求转发给后台应用去处理，从而实现动静分离。</p>\n<p>在使用前后端分离之后，可以很大程度的提升静态资源的访问速度，同时在开过程中也可以让前后端开发并行可以有效的提高开发时间，也可以有些的减少联调时间 。</p>\n<h2 id=\"linux-安装-nginx\"><a class=\"anchor\" href=\"#linux-安装-nginx\">#</a> Linux 安装 Nginx</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWFvbWFuLmJsb2cuY3Nkbi5uZXQvYXJ0aWNsZS9kZXRhaWxzLzEyMzk2NTQ5Mg==\">https://xiaoman.blog.csdn.net/article/details/123965492</span></p>\n<h2 id=\"nginx-常用命令\"><a class=\"anchor\" href=\"#nginx-常用命令\">#</a> Nginx 常用命令</h2>\n<ol>\n<li>配置 nginx 环境变量<br />\n <code>whereis nginx</code>  找到 nginx 安装目录<br />\n前往根目录 找到 etc 文件夹<br />\n <code>vim profile</code>  打开配置文件<br />\n添加环境变量（前半段 node 忽略）  <code>export PATH=$PATH:/node-v14.19.1-linux-x64/bin:/usr/local/nginx/sbin</code></li>\n<li>Nginx 常用命令介绍</li>\n</ol>\n<ul>\n<li><code>nginx -v</code>  查看 nginx 版本号</li>\n<li><code>nginx</code>  启动 nginx</li>\n<li><code>nginx -s stop</code>  停止 nginx,Stop 是立即停止</li>\n<li><code>nginx -s quit</code>  Quit 是一个优雅的关闭方式，Nginx 在退出前完成已经接受的请求处理</li>\n<li><code>nginx -s reload</code>  重载 nginx 配置文件</li>\n<li><code>ps -ef | grep nginx</code>  查看 nginx 进程<br />\n ps -ef 输出标准格式的 linux 进程命令<br />\n grep 命令 是查找， 是一种强大的文本搜索工具 我们这儿是查找 nginx</li>\n</ul>\n<h2 id=\"nginx-配置文件\"><a class=\"anchor\" href=\"#nginx-配置文件\">#</a> Nginx 配置文件</h2>\n<ol>\n<li>如何查找 nginx 配置文件（ <code>nginx -t</code>  检查配置文件是否有语法错误）</li>\n<li>打开配置文件  <code>vim nginx.conf</code> <br />\nNginx 的主配置文件是 nginx.conf，这个配置文件一共由三部分组成，分别为 [全局块]、[events 块] 和 [http 块]。<br />\n在 http 块中，又包含 http 全局块、多个 server 块。<br />\n每个 server 块中，可以包含 server 全局块和多个 location 块。在同一配置块中嵌套的配置块，各个之间不存在次序关系</li>\n</ol>\n<h3 id=\"全局快\"><a class=\"anchor\" href=\"#全局快\">#</a> 全局快</h3>\n<p>全局块是默认配置文件从开始到 events 块之间的一部分内容，主要设置一些影响 Nginx 服务器整体运行的配置指令，因此，这些指令的作用域是 Nginx 服务器全局。</p>\n<ul>\n<li><code>user [user] [group]</code>  指定可以运行 nginx 服务的用户和用户组，只能在全局块配置 user 指令在 Windows 上不生效，如果你制定具体用户和用户组会报警告</li>\n<li><code>worker_processes</code>  nginx 进程数量 worker_processes 比如设置为 2 nginx 将会开启一个 master 进程和 2 两个 worker 进程</li>\n<li><code>pid</code>  logs/nginx.pid 存放 pid 文件</li>\n<li><code>error_log</code>  logs/error.log; 全局错误日志类型 debug info warn error 存放地址</li>\n</ul>\n<h3 id=\"events-块\"><a class=\"anchor\" href=\"#events-块\">#</a> events 块</h3>\n<p>events 块涉及的指令主要影响 Nginx 服务器与用户的网络连接。常用到的设置包括是否开启对多 worker process 下的网络连接进行序列化，是否允许同时接收多个网络连接，选取哪种事件驱动模型处理连接请求，每个 worker process 可以同时支持的最大连接数等</p>\n<ul>\n<li>\n<p><code>accept_mutex</code>  默认开启 - 开启之后 nginx 的多个 worker 将会以串行的方式来处理，只会有一个 worker 将会被唤起，其他的 worker 继续睡眠，如果不开启将会造成惊群效应多个 worker 全部唤起不过只有一个 Worker 能获取新连接，其它的 Worker 会重新进入休眠状态</p>\n</li>\n<li>\n<p><code>worker_connections</code>  单个进程最大连接数（最大连接数 = 连接数 + 进程数）</p>\n</li>\n</ul>\n<h3 id=\"http-块\"><a class=\"anchor\" href=\"#http-块\">#</a> http 块</h3>\n<p>http 块是 Nginx 服务器配置中的重要部分，代理、缓存和日志定义等绝大多数的功能和第三方模块的配置都可以放在这个模块中。</p>\n<ul>\n<li><code>include指令</code> ，用于引入其他的配置文件</li>\n<li><code>default_type</code>  如果 Web 程序没设置，Nginx 也没对应文件的扩展名，就用 Nginx 里默认的 default_type 定义的处理方式。default_type application/octet-stream; #nginx 默认文件类型</li>\n<li><code>log_format指令</code> ，用于定义日志格式，此指令只能在 http 块中进行配置</li>\n<li><code>sendfile</code>  简单来说就是启用 sendfile () 系统调用来替换 read () 和 write () 调用，减少系统上下文切换从而提高性能，当 nginx 是静态文件服务器时，能极大提高 nginx 的性能表现</li>\n<li><code>keepalive_timeout</code>  HTTP 有一个 KeepAlive 模式，它告诉 webserver 在处理完一个请求后保持这个 TCP 连接的打开状态。若接收到来自客户端的其它请求，服务端会利用这个未被关闭的连接，而不需要再建立一个连接。</li>\n<li><code>gzip</code>  开启 Gzip 压缩功能， 可以使网站的 css、js 、xml、html 文件在传输时进行压缩，提高访问速度，进而优化 Nginx 性能</li>\n</ul>\n<h4 id=\"server-块\"><a class=\"anchor\" href=\"#server-块\">#</a> server 块</h4>\n<p>每一个 http 块都可以包含多个 server 块，而 <code>每个server块就相当于一台虚拟主机</code> ，它内部可有多台主机联合提供服务，一起对外提供在逻辑上关系密切的一组服务</p>\n<ul>\n<li><code>listen</code>  指令的配置非常灵活，可以单独制定 ip，单独指定端口或者同时指定 ip 和端口</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>listen <span class=\"token number\">127.0</span>.0.1:8000<span class=\"token punctuation\">;</span>  <span class=\"token comment\">#只监听来自 127.0.0.1 这个 IP，请求 8000 端口的请求</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>listen <span class=\"token number\">127.0</span>.0.1<span class=\"token punctuation\">;</span> <span class=\"token comment\">#只监听来自 127.0.0.1 这个 IP，请求 80 端口的请求（不指定端口，默认 80）</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>listen <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">#监听来自所有 IP，请求 9999 端口的请求</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>listen *:9999<span class=\"token punctuation\">;</span> <span class=\"token comment\">#和上面效果一样</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>listen localhost:8000<span class=\"token punctuation\">;</span> <span class=\"token comment\">#和第一种效果一致</span></pre></td></tr></table></figure><ul>\n<li><code>server_name</code>  nginx 允许一个虚拟主机有一个或多个名字，也可以使用通配符 &quot;*&quot; 来设置虚拟主机的名字 支持 ip 域名 通配符 正则等</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>server_name  localhost<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"location-块\"><a class=\"anchor\" href=\"#location-块\">#</a> location 块</h5>\n<p>每个 server 块中可以包含多个 location 块。在整个 Nginx 配置文档中起着重要的作用，而且 Nginx 服务器在许多功能上的灵活性往往在 location 指令的配置中体现出来<br />\n location 指令可以分为以下 3 类：</p>\n<ul>\n<li>前缀字符串匹配</li>\n<li>正则表达式匹配</li>\n<li>用于内部跳转的命名 location<br />\n 前缀字符串匹配</li>\n<li>精确匹配 =</li>\n<li>前缀匹配 ^~（立刻停止后续的正则搜索）</li>\n<li>按文件中顺序的正则匹配 <sub>或</sub> *</li>\n<li>匹配不带任何修饰的前缀匹配。<br />\nlocation root<br />\nroot 指定目录的上级目录，并且该上级目录要含有 locatoin 指定名称的同名目录。</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>location <span class=\"token operator\">/</span>img<span class=\"token operator\">/</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\troot <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>image<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>若按照这种配置的话，则访问 /img/ 目录下的文件时，nginx 会去 /var/www/image/img/ 目录下找文件</p>\n<h2 id=\"nginx-反向代理\"><a class=\"anchor\" href=\"#nginx-反向代理\">#</a> Nginx 反向代理</h2>\n<p>反向代理中的常用指令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>proxy_pass</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>proxy_set_header</pre></td></tr></table></figure><h4 id=\"proxy_pass\"><a class=\"anchor\" href=\"#proxy_pass\">#</a>  <code>proxy_pass</code></h4>\n<p>该指令用来设置被代理服务器地址，可以是主机名称、IP 地址加端口号形式。</p>\n<ul>\n<li>案例 1 代理到哔哩哔哩</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>location <span class=\"token operator\">/</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   root   html<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   index  index<span class=\"token punctuation\">.</span>html index<span class=\"token punctuation\">.</span>htm<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   proxy_pass http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>bilibili<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>案例 2 nginx 反向代理解决跨域<br />\n前端代码</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">let</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/api/portal/list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">==</span> <span class=\"token number\">4</span> <span class=\"token operator\">&amp;&amp;</span> xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>express 服务端代码</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/portal/list\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"搞咩啊\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">9000</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>nginx 配置文件</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>location <span class=\"token operator\">/</span>api<span class=\"token operator\">/</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            proxy_pass http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">localhost:9000</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>截取到 /api/ 将会转发到 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo5MDAwLw==\">http://localhost:9000/</span></p>\n<h4 id=\"proxy_set_header\"><a class=\"anchor\" href=\"#proxy_set_header\">#</a>  <code>proxy_set_header</code></h4>\n<p>该指令可以更改 Nginx 服务器接收到的客户端请求的请求头信息，然后将新的请求头发送给代理的服务器</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// proxy_set_header X-Real-IP $remote_addr;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// proxy_set_header X-Real-Port $remote_port;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 三个 header 分别表示：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// X-Real-IP 客户端或上一级代理 ip</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// X-Real-Port 客户端或上一级端口</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// X-Forwarded-For 包含了客户端和各级代理 ip 的完整 ip 链路</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 其中 X-Real-IP 是必需的，后两项选填。当只存在一级 nginx 代理的时候 X-Real-IP 和 X-Forwarded-For 是一致的，而当存在多级代理的时候，X-Forwarded-For 就变成了如下形式</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// $remote_addr 是前一节点的 IP，并不一定是用户的真实 IP。</span></pre></td></tr></table></figure><h2 id=\"nginx-vue-history-404-问题\"><a class=\"anchor\" href=\"#nginx-vue-history-404-问题\">#</a> Nginx-Vue-History-404 问题</h2>\n<p>Vue histroy 模式 跳转路由 404 问题<br />\n问题原因：我们的服务器是根据页面路由，去按路径寻找资源的。我们打包好的 web 站点只有一个 html 页面，不存在其他资源目录下的 html，服务器找不到对应页面所以才报 404。<br />\n解决方案:  <code>try_files $uri $uri/ /index.html;</code></p>\n<p>如果给出的 file 都没有匹配到，则重新请求最后一个参数给定的 uri，就是新的 location 匹配<br />\n常见的变量：</p>\n<ul>\n<li>$uri 当前请求的 URI，但不含 “？” 后的参数</li>\n<li>$args 当前请求的参数，即 “？” 后的宇符串</li>\n<li>$arg_xxx 当前请求里的某个参数，“arg” 后是参数的名字</li>\n<li>$http_xxx 当前请求里的 xxx 头部对应的值</li>\n<li>$sent_http_xxx 返回给客户端的响应头部对应的值</li>\n<li>$remote_addr 客户端 IP 地址。</li>\n<li>$http_cookie 获取 cookie 值</li>\n<li>$cookie_xxx 当前请求的 cookie xxx 对应的值</li>\n<li>$request_uri 浏览器发起的不作任何修改的请求的 url 中的 path <span class=\"exturl\" data-url=\"aHR0cDovL3huLS13d3ctbHA2ZW4xaS5iYWlkdS5jb20vcDEvZmlsZT9kPTExMQ==\">如在 www.baidu.com/p1/file?d=111</span>, 其值为 /p1/file?d=111</li>\n<li>$uri 指当前的请求 URI，不包括任何参数，反映任何内部重定向或 index 模块所做的修改</li>\n<li>$request_method 请求方法</li>\n</ul>\n<h2 id=\"nginx-go-access-日志分析器\"><a class=\"anchor\" href=\"#nginx-go-access-日志分析器\">#</a> Nginx-Go-Access - 日志分析器</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWFvbWFuLmJsb2cuY3Nkbi5uZXQvYXJ0aWNsZS9kZXRhaWxzLzEyNDU0NjI5Mw==\">https://xiaoman.blog.csdn.net/article/details/124546293</span></p>\n<h2 id=\"nginx-负载均衡-upstream\"><a class=\"anchor\" href=\"#nginx-负载均衡-upstream\">#</a> Nginx - 负载均衡 upstream</h2>\n<p>upstream 的基本语法如下，一个 upstream 需要设置一个名称，这个名称可以在 server 里面当作 proxy 主机使用。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>upstream  node <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        server <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">9001</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        server <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">9002</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        server <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">9003</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>location <span class=\"token operator\">/</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            proxy_pass http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol>\n<li>默认状态是按照轮询的方式去做负载的<br />\n使用 express 启动三个服务 分别是 9001 9002 9003</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Nginx 负载均衡9001\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Nginx 负载均衡9001\"</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  num<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">//------------------------------9001</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">9001</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"9001 success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">//-----------------------------------</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Nginx 负载均衡9002\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Nginx 负载均衡9002\"</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  num<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">//------------------------------9002</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">9002</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"9002 success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">//--------------------------------</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Nginx 负载均衡9003\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Nginx 负载均衡9003\"</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  num<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">//------------------------------9003</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">9003</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"9003 success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>权重 weight</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>upstream  node <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        server <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">9001</span> weight<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        server <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">9002</span> weight<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        server <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">9003</span> weight<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>fail_timeout backup<br />\nail_timeout 是故障等待超时时间</li>\n</ol>\n<p>backup 是备用服务器参数，可以为一个 upstream 设置一个 backup 的 server，在生产 server 全部都出问题之后，可以自动切换到备用 server 上，为回复服务争取时间</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>upstream  node <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        server <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">9001</span> fail_timeout<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        server <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">9002</span> fail_timeout<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        server <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">9003</span> backup<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Nginx"
            ]
        }
    ]
}