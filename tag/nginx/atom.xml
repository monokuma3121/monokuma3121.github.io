<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://eucli.top</id>
    <title>Eucli • Posts by &#34;nginx&#34; tag</title>
    <link href="https://eucli.top" />
    <updated>2023-05-31T02:16:34.000Z</updated>
    <category term="JavaScript" />
    <category term="css" />
    <category term="HTML" />
    <category term="MATLAB" />
    <category term="Nginx" />
    <category term="Node.js" />
    <category term="TypeScript" />
    <category term="axios二次封装" />
    <category term="Element Plus" />
    <category term="VueRouter" />
    <category term="路由" />
    <category term="vue3" />
    <category term="pinia" />
    <category term="vite" />
    <category term="electron" />
    <category term="小技巧" />
    <category term="自动化" />
    <category term="Vue" />
    <category term="异步" />
    <category term="uni-app" />
    <category term="VueUse" />
    <category term="杂谈" />
    <category term="Linux" />
    <category term="ROOT" />
    <category term="日常" />
    <entry>
        <id>https://eucli.top/2023/05/31/Nginx/</id>
        <title>Nginx学习</title>
        <link rel="alternate" href="https://eucli.top/2023/05/31/Nginx/"/>
        <content type="html">&lt;h1 id=&#34;nginx&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx&#34;&gt;#&lt;/a&gt; Nginx&lt;/h1&gt;
&lt;h2 id=&#34;介绍-nginx&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#介绍-nginx&#34;&gt;#&lt;/a&gt; 介绍 Nginx&lt;/h2&gt;
&lt;p&gt;Nginx (engine x) 是一个高性能的 HTTP 和反向代理 web 服务器，同时也提供了 IMAP/POP3/SMTP 服务。&lt;br&gt;
Nginx 是一个安装非常的简单、配置文件非常简洁（还能够支持 perl 语法）、Bug 非常少的服务。Nginx 启动特别容易，并且几乎可以做到 7*24 不间断运行，即使运行数个月也不需要重新启动。你还能够不间断服务的情况下进行软件版本的升级。&lt;br&gt;
Nginx 代码完全用 C 语言从头写成。官方数据测试表明能够支持高达 50,000 个并发连接数的响应。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高并发，大流量：需要面对高并发用户，大流量访问。举个例子，去往迪拜的飞机有 200 张票，但是有 100w 人都挤进系统买票，如何让这 100w 人能够看到票务的实时更新，以及顺利的买到一张票，都是一个网站架构师应该考虑的问题。这也许对于淘宝的 “双十一” 1000w 的一分钟独立访问用户量来说，是个微不足道的数字，但是对于用户的体验以及网站的口碑来说，都是一项不小的挑战&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;正向代理 反向代理&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;正向代理&lt;br&gt;
 nginx 不仅可以做反向代理，还能用作正向代理来进行上网等功能。如果把局域网外的 Internet 想象成一个巨大的资源库，则局域网中的客户端要访问 Internet，则需要通过代理服务器来访问，这种代理服务就称为正向代理（也就是大家常说的，通过正向代理进行上网功能）&lt;br&gt;
&lt;img src=&#34;https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/0c67609bbc754e92af95cfab0c1299ee.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/kuangstudy46bdad36-d3e0-43b0-a223-43360b7e8fc7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;反向代理&lt;br&gt;
反向代理实际运行方式是代理服务器接受网络上的连接请求。它将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给网络上请求连接的客户端，此时代理服务器对外就表现为一个服务器。&lt;br&gt;
&lt;img src=&#34;https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/783284cf6b014109a6464b533c15ff00.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/kuangstudy62a15097-6e2a-4dbe-bcf5-f0d7cab81089.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;负载均衡（upstream）&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;轮询&lt;br&gt;
轮询方式是 Nginx 负载默认的方式，顾名思义，所有请求都按照时间顺序分配到不同的服务上，如果服务 Down 掉，可以自动剔除&lt;/li&gt;
&lt;li&gt;权重&lt;br&gt;
指定每个服务的权重比例，weight 和访问比率成正比，通常用于后端服务机器性能不统一，将性能好的分配权重高来发挥服务器最大性能&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;动静分离&lt;br&gt;
在 Web 开发中，通常来说，动态资源其实就是指那些后台资源，而静态资源就是指 HTML，JavaScript，CSS，img 等文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一般来说，都需要将动态资源和静态资源分开，将静态资源部署在 Nginx 上，当一个请求来的时候，如果是静态资源的请求，就直接到 nginx 配置的静态资源目录下面获取资源，如果是动态资源的请求，nginx 利用反向代理的原理，把请求转发给后台应用去处理，从而实现动静分离。&lt;/p&gt;
&lt;p&gt;在使用前后端分离之后，可以很大程度的提升静态资源的访问速度，同时在开过程中也可以让前后端开发并行可以有效的提高开发时间，也可以有些的减少联调时间 。&lt;/p&gt;
&lt;h2 id=&#34;linux-安装-nginx&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-安装-nginx&#34;&gt;#&lt;/a&gt; Linux 安装 Nginx&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://xiaoman.blog.csdn.net/article/details/123965492&#34;&gt;https://xiaoman.blog.csdn.net/article/details/123965492&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;nginx-常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx-常用命令&#34;&gt;#&lt;/a&gt; Nginx 常用命令&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;配置 nginx 环境变量&lt;br&gt;
 &lt;code&gt;whereis nginx&lt;/code&gt;  找到 nginx 安装目录&lt;br&gt;
前往根目录 找到 etc 文件夹&lt;br&gt;
 &lt;code&gt;vim profile&lt;/code&gt;  打开配置文件&lt;br&gt;
添加环境变量（前半段 node 忽略）  &lt;code&gt;export PATH=$PATH:/node-v14.19.1-linux-x64/bin:/usr/local/nginx/sbin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Nginx 常用命令介绍&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nginx -v&lt;/code&gt;  查看 nginx 版本号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nginx&lt;/code&gt;  启动 nginx&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nginx -s stop&lt;/code&gt;  停止 nginx,Stop 是立即停止&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nginx -s quit&lt;/code&gt;  Quit 是一个优雅的关闭方式，Nginx 在退出前完成已经接受的请求处理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nginx -s reload&lt;/code&gt;  重载 nginx 配置文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps -ef | grep nginx&lt;/code&gt;  查看 nginx 进程&lt;br&gt;
 ps -ef 输出标准格式的 linux 进程命令&lt;br&gt;
 grep 命令 是查找， 是一种强大的文本搜索工具 我们这儿是查找 nginx&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;nginx-配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx-配置文件&#34;&gt;#&lt;/a&gt; Nginx 配置文件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;如何查找 nginx 配置文件（ &lt;code&gt;nginx -t&lt;/code&gt;  检查配置文件是否有语法错误）&lt;/li&gt;
&lt;li&gt;打开配置文件  &lt;code&gt;vim nginx.conf&lt;/code&gt; &lt;br&gt;
Nginx 的主配置文件是 nginx.conf，这个配置文件一共由三部分组成，分别为 [全局块]、[events 块] 和 [http 块]。&lt;br&gt;
在 http 块中，又包含 http 全局块、多个 server 块。&lt;br&gt;
每个 server 块中，可以包含 server 全局块和多个 location 块。在同一配置块中嵌套的配置块，各个之间不存在次序关系&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;全局快&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#全局快&#34;&gt;#&lt;/a&gt; 全局快&lt;/h3&gt;
&lt;p&gt;全局块是默认配置文件从开始到 events 块之间的一部分内容，主要设置一些影响 Nginx 服务器整体运行的配置指令，因此，这些指令的作用域是 Nginx 服务器全局。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;user [user] [group]&lt;/code&gt;  指定可以运行 nginx 服务的用户和用户组，只能在全局块配置 user 指令在 Windows 上不生效，如果你制定具体用户和用户组会报警告&lt;/li&gt;
&lt;li&gt;&lt;code&gt;worker_processes&lt;/code&gt;  nginx 进程数量 worker_processes 比如设置为 2 nginx 将会开启一个 master 进程和 2 两个 worker 进程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pid&lt;/code&gt;  logs/nginx.pid 存放 pid 文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error_log&lt;/code&gt;  logs/error.log; 全局错误日志类型 debug info warn error 存放地址&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;events-块&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#events-块&#34;&gt;#&lt;/a&gt; events 块&lt;/h3&gt;
&lt;p&gt;events 块涉及的指令主要影响 Nginx 服务器与用户的网络连接。常用到的设置包括是否开启对多 worker process 下的网络连接进行序列化，是否允许同时接收多个网络连接，选取哪种事件驱动模型处理连接请求，每个 worker process 可以同时支持的最大连接数等&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;accept_mutex&lt;/code&gt;  默认开启 - 开启之后 nginx 的多个 worker 将会以串行的方式来处理，只会有一个 worker 将会被唤起，其他的 worker 继续睡眠，如果不开启将会造成惊群效应多个 worker 全部唤起不过只有一个 Worker 能获取新连接，其它的 Worker 会重新进入休眠状态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;worker_connections&lt;/code&gt;  单个进程最大连接数（最大连接数 = 连接数 + 进程数）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;http-块&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#http-块&#34;&gt;#&lt;/a&gt; http 块&lt;/h3&gt;
&lt;p&gt;http 块是 Nginx 服务器配置中的重要部分，代理、缓存和日志定义等绝大多数的功能和第三方模块的配置都可以放在这个模块中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;include指令&lt;/code&gt; ，用于引入其他的配置文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default_type&lt;/code&gt;  如果 Web 程序没设置，Nginx 也没对应文件的扩展名，就用 Nginx 里默认的 default_type 定义的处理方式。default_type application/octet-stream; #nginx 默认文件类型&lt;/li&gt;
&lt;li&gt;&lt;code&gt;log_format指令&lt;/code&gt; ，用于定义日志格式，此指令只能在 http 块中进行配置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sendfile&lt;/code&gt;  简单来说就是启用 sendfile () 系统调用来替换 read () 和 write () 调用，减少系统上下文切换从而提高性能，当 nginx 是静态文件服务器时，能极大提高 nginx 的性能表现&lt;/li&gt;
&lt;li&gt;&lt;code&gt;keepalive_timeout&lt;/code&gt;  HTTP 有一个 KeepAlive 模式，它告诉 webserver 在处理完一个请求后保持这个 TCP 连接的打开状态。若接收到来自客户端的其它请求，服务端会利用这个未被关闭的连接，而不需要再建立一个连接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gzip&lt;/code&gt;  开启 Gzip 压缩功能， 可以使网站的 css、js 、xml、html 文件在传输时进行压缩，提高访问速度，进而优化 Nginx 性能&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;server-块&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#server-块&#34;&gt;#&lt;/a&gt; server 块&lt;/h4&gt;
&lt;p&gt;每一个 http 块都可以包含多个 server 块，而 &lt;code&gt;每个server块就相当于一台虚拟主机&lt;/code&gt; ，它内部可有多台主机联合提供服务，一起对外提供在逻辑上关系密切的一组服务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;listen&lt;/code&gt;  指令的配置非常灵活，可以单独制定 ip，单独指定端口或者同时指定 ip 和端口&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;listen 127.0.0.1:8000;  &lt;span class=&#34;comment&#34;&gt;#只监听来自127.0.0.1这个IP，请求8000端口的请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;listen 127.0.0.1; &lt;span class=&#34;comment&#34;&gt;#只监听来自127.0.0.1这个IP，请求80端口的请求（不指定端口，默认80）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;listen 9999; &lt;span class=&#34;comment&#34;&gt;#监听来自所有IP，请求9999端口的请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;listen *:9999; &lt;span class=&#34;comment&#34;&gt;#和上面效果一样&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;listen localhost:8000; &lt;span class=&#34;comment&#34;&gt;#和第一种效果一致&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;server_name&lt;/code&gt;  nginx 允许一个虚拟主机有一个或多个名字，也可以使用通配符 &amp;quot;*&amp;quot; 来设置虚拟主机的名字 支持 ip 域名 通配符 正则等&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;server_name  localhost;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;location-块&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#location-块&#34;&gt;#&lt;/a&gt; location 块&lt;/h5&gt;
&lt;p&gt;每个 server 块中可以包含多个 location 块。在整个 Nginx 配置文档中起着重要的作用，而且 Nginx 服务器在许多功能上的灵活性往往在 location 指令的配置中体现出来&lt;br&gt;
 location 指令可以分为以下 3 类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前缀字符串匹配&lt;/li&gt;
&lt;li&gt;正则表达式匹配&lt;/li&gt;
&lt;li&gt;用于内部跳转的命名 location&lt;br&gt;
 前缀字符串匹配&lt;/li&gt;
&lt;li&gt;精确匹配 =&lt;/li&gt;
&lt;li&gt;前缀匹配 ^~（立刻停止后续的正则搜索）&lt;/li&gt;
&lt;li&gt;按文件中顺序的正则匹配 &lt;sub&gt;或&lt;/sub&gt; *&lt;/li&gt;
&lt;li&gt;匹配不带任何修饰的前缀匹配。&lt;br&gt;
location root&lt;br&gt;
root 指定目录的上级目录，并且该上级目录要含有 locatoin 指定名称的同名目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;location /img/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	root /&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt;/www/image;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;若按照这种配置的话，则访问 /img/ 目录下的文件时，nginx 会去 /var/www/image/img/ 目录下找文件&lt;/p&gt;
&lt;h2 id=&#34;nginx-反向代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx-反向代理&#34;&gt;#&lt;/a&gt; Nginx 反向代理&lt;/h2&gt;
&lt;p&gt;反向代理中的常用指令：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;proxy_pass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxy_set_header&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;proxy_pass&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#proxy_pass&#34;&gt;#&lt;/a&gt;  &lt;code&gt;proxy_pass&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;该指令用来设置被代理服务器地址，可以是主机名称、IP 地址加端口号形式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;案例 1 代理到哔哩哔哩&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   root   html;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   index  index.&lt;span class=&#34;property&#34;&gt;html&lt;/span&gt; index.&lt;span class=&#34;property&#34;&gt;htm&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   proxy_pass &lt;span class=&#34;attr&#34;&gt;http&lt;/span&gt;:&lt;span class=&#34;comment&#34;&gt;//bilibili.com;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;案例 2 nginx 反向代理解决跨域&lt;br&gt;
前端代码&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a.&lt;span class=&#34;property&#34;&gt;onclick&lt;/span&gt; = &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; xhr = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;XMLHttpRequest&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  xhr.&lt;span class=&#34;title function_&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;/api/portal/list&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  xhr.&lt;span class=&#34;property&#34;&gt;onreadystatechange&lt;/span&gt; = &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (xhr.&lt;span class=&#34;property&#34;&gt;readyState&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; &amp;amp;&amp;amp; xhr.&lt;span class=&#34;property&#34;&gt;status&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(xhr.&lt;span class=&#34;property&#34;&gt;responseText&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  xhr.&lt;span class=&#34;title function_&#34;&gt;send&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;express 服务端代码&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; express = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;express&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; app = &lt;span class=&#34;title function_&#34;&gt;express&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;/portal/list&amp;quot;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;req, res&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  res.&lt;span class=&#34;title function_&#34;&gt;json&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;code&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;message&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;搞咩啊&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app.&lt;span class=&#34;title function_&#34;&gt;listen&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;9000&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;nginx 配置文件&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;location /api/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    proxy_pass &lt;span class=&#34;attr&#34;&gt;http&lt;/span&gt;:&lt;span class=&#34;comment&#34;&gt;//localhost:9000/;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;截取到 /api/ 将会转发到 &lt;a href=&#34;http://localhost:9000/&#34;&gt;http://localhost:9000/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;proxy_set_header&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#proxy_set_header&#34;&gt;#&lt;/a&gt;  &lt;code&gt;proxy_set_header&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;该指令可以更改 Nginx 服务器接收到的客户端请求的请求头信息，然后将新的请求头发送给代理的服务器&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// proxy_set_header X-Real-IP $remote_addr;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// proxy_set_header X-Real-Port $remote_port;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 三个 header 分别表示：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// X-Real-IP 客户端或上一级代理 ip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// X-Real-Port 客户端或上一级端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// X-Forwarded-For 包含了客户端和各级代理 ip 的完整 ip 链路&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 其中 X-Real-IP 是必需的，后两项选填。当只存在一级 nginx 代理的时候 X-Real-IP 和 X-Forwarded-For 是一致的，而当存在多级代理的时候，X-Forwarded-For 就变成了如下形式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// $remote_addr 是前一节点的 IP，并不一定是用户的真实 IP。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;nginx-vue-history-404-问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx-vue-history-404-问题&#34;&gt;#&lt;/a&gt; Nginx-Vue-History-404 问题&lt;/h2&gt;
&lt;p&gt;Vue histroy 模式 跳转路由 404 问题&lt;br&gt;
问题原因：我们的服务器是根据页面路由，去按路径寻找资源的。我们打包好的 web 站点只有一个 html 页面，不存在其他资源目录下的 html，服务器找不到对应页面所以才报 404。&lt;br&gt;
解决方案:  &lt;code&gt;try_files $uri $uri/ /index.html;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果给出的 file 都没有匹配到，则重新请求最后一个参数给定的 uri，就是新的 location 匹配&lt;br&gt;
常见的变量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$uri 当前请求的 URI，但不含 “？” 后的参数&lt;/li&gt;
&lt;li&gt;$args 当前请求的参数，即 “？” 后的宇符串&lt;/li&gt;
&lt;li&gt;$arg_xxx 当前请求里的某个参数，“arg” 后是参数的名字&lt;/li&gt;
&lt;li&gt;$http_xxx 当前请求里的 xxx 头部对应的值&lt;/li&gt;
&lt;li&gt;$sent_http_xxx 返回给客户端的响应头部对应的值&lt;/li&gt;
&lt;li&gt;$remote_addr 客户端 IP 地址。&lt;/li&gt;
&lt;li&gt;$http_cookie 获取 cookie 值&lt;/li&gt;
&lt;li&gt;$cookie_xxx 当前请求的 cookie xxx 对应的值&lt;/li&gt;
&lt;li&gt;$request_uri 浏览器发起的不作任何修改的请求的 url 中的 path &lt;a href=&#34;http://xn--www-lp6en1i.baidu.com/p1/file?d=111&#34;&gt;如在 www.baidu.com/p1/file?d=111&lt;/a&gt;, 其值为 /p1/file?d=111&lt;/li&gt;
&lt;li&gt;$uri 指当前的请求 URI，不包括任何参数，反映任何内部重定向或 index 模块所做的修改&lt;/li&gt;
&lt;li&gt;$request_method 请求方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;nginx-go-access-日志分析器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx-go-access-日志分析器&#34;&gt;#&lt;/a&gt; Nginx-Go-Access - 日志分析器&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://xiaoman.blog.csdn.net/article/details/124546293&#34;&gt;https://xiaoman.blog.csdn.net/article/details/124546293&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;nginx-负载均衡-upstream&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx-负载均衡-upstream&#34;&gt;#&lt;/a&gt; Nginx - 负载均衡 upstream&lt;/h2&gt;
&lt;p&gt;upstream 的基本语法如下，一个 upstream 需要设置一个名称，这个名称可以在 server 里面当作 proxy 主机使用。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;upstream  node &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;9001&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;9002&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;9003&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    proxy_pass &lt;span class=&#34;attr&#34;&gt;http&lt;/span&gt;:&lt;span class=&#34;comment&#34;&gt;//node;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;默认状态是按照轮询的方式去做负载的&lt;br&gt;
使用 express 启动三个服务 分别是 9001 9002 9003&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; express = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;express&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; num = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; app = &lt;span class=&#34;title function_&#34;&gt;express&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;/list&amp;quot;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;req, res&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  res.&lt;span class=&#34;title function_&#34;&gt;json&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;code&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;message&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Nginx 负载均衡9001&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Nginx 负载均衡9001&amp;quot;&lt;/span&gt;, num);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  num++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//------------------------------9001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app.&lt;span class=&#34;title function_&#34;&gt;listen&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;9001&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;9001 success&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//-----------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; express = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;express&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; num = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; app = &lt;span class=&#34;title function_&#34;&gt;express&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;/list&amp;quot;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;req, res&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  res.&lt;span class=&#34;title function_&#34;&gt;json&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;code&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;message&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Nginx 负载均衡9002&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Nginx 负载均衡9002&amp;quot;&lt;/span&gt;, num);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  num++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//------------------------------9002&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app.&lt;span class=&#34;title function_&#34;&gt;listen&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;9002&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;9002 success&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//--------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; express = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;express&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; num = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; app = &lt;span class=&#34;title function_&#34;&gt;express&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;/list&amp;quot;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;req, res&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  res.&lt;span class=&#34;title function_&#34;&gt;json&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;code&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;message&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Nginx 负载均衡9003&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Nginx 负载均衡9003&amp;quot;&lt;/span&gt;, num);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  num++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//------------------------------9003&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app.&lt;span class=&#34;title function_&#34;&gt;listen&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;9003&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;9003 success&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;权重 weight&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;upstream  node &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;9001&lt;/span&gt; weight=&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;9002&lt;/span&gt; weight=&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;9003&lt;/span&gt; weight=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;fail_timeout backup&lt;br&gt;
ail_timeout 是故障等待超时时间&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;backup 是备用服务器参数，可以为一个 upstream 设置一个 backup 的 server，在生产 server 全部都出问题之后，可以自动切换到备用 server 上，为回复服务争取时间&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;upstream  node &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;9001&lt;/span&gt; fail_timeout=&lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;9002&lt;/span&gt; fail_timeout=&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;9003&lt;/span&gt; backup;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="Nginx" />
        <updated>2023-05-31T02:16:34.000Z</updated>
    </entry>
    <entry>
        <id>https://eucli.top/2023/05/29/%E6%9C%8D%E5%8A%A1%E7%AB%AF/</id>
        <title>服务端</title>
        <link rel="alternate" href="https://eucli.top/2023/05/29/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
        <content type="html">&lt;h1 id=&#34;学习-pm2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#学习-pm2&#34;&gt;#&lt;/a&gt; 学习 pm2&lt;/h1&gt;
&lt;h2 id=&#34;pm2-node-应用进程管理器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pm2-node-应用进程管理器&#34;&gt;#&lt;/a&gt; PM2 Node 应用进程管理器&lt;/h2&gt;
&lt;p&gt;pm2 是 node 进程管理工具，可以利用它来简化很多 node 应用管理的繁琐任务，如性能监控、自动重启、负载均衡等，因为在工作中遇到服务器重启后，需要一个个去重新启动每个服务，这样不仅繁琐、效率低，而且容易遗忘开启一些服务。&lt;/p&gt;
&lt;h2 id=&#34;pm2-的主要特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pm2-的主要特性&#34;&gt;#&lt;/a&gt; PM2 的主要特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;内建负载均衡（使用 Node cluster 集群模块）&lt;/li&gt;
&lt;li&gt;后台运行&lt;/li&gt;
&lt;li&gt;0 秒停机重载&lt;/li&gt;
&lt;li&gt;具有 Ubuntu 和 CentOS 的启动脚本&lt;/li&gt;
&lt;li&gt;停止不稳定的进程（避免无限循环）&lt;/li&gt;
&lt;li&gt;控制台检测&lt;/li&gt;
&lt;li&gt;提供 HTTP API&lt;/li&gt;
&lt;li&gt;远程控制和实时的接口 API (Nodejs 模块，允许和 PM2 进程管理器交互)&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;安装 &amp;amp; 目录&lt;br&gt;
运行以下命令进行全局安装：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install -g pm2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;常用命令&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;启动命令&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 start app.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;命令行参数&lt;br&gt;
我们可以在最基本的启动命令后面，添加一些参数选项，去满足我们的需求，常用的参数选项如下所示：&lt;br&gt;
–watch：监听应用目录的变化，一旦发生变化，自动重启。&lt;br&gt;
-i or --instance：启用多少个实例，可用于负载均衡，如果 -i 0 或者 -i max，则根据当前机器核数确定实例数目。&lt;br&gt;
–ignore-watch：排除监听的目录或文件，可以是特定的文件名，也可以是正则。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们在启动命令后面加入以上的一些参数，完整的启动命令如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pm2 start app.js --watch -i max -n xiaoman&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;重启命令&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 restart app.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;停止命令&lt;br&gt;
停止特定的应用，可以通过 pm2 list 先获取应用的名字或者进程的 id，然后再调用以下命令停止相应的应用；&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 stop app_name | app_id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果需要停止全部的应用，则使用以下命令：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 stop all&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;删除命令&lt;br&gt;
删除特定的应用，可以通过 pm2 list 先获取应用的名字或者进程的 id，然后再调用以下命令删除相应的应用；&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 delete app_name | app_id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果需要删除全部的应用，则使用以下命令：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 delete all&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;查看有哪些进程&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置文件&#34;&gt;#&lt;/a&gt; 配置文件&lt;/h2&gt;
&lt;p&gt;如果我们使用命令行参数定义一些选项，那么每次启动进程时，都需要敲上一大堆的命令，非常繁琐；所以我们可以使用配置文件来将命令行参数进行配置，配置文件里的配置项跟命令行参数是基本一致的；如下所示 pm2 的配置文件 pm2.json ，然后在 package.json 文件中配置启动命令 “pm2”: “pm2 start pm2.json” ，这样我们只需要运行 npm run pm2 就可以使用 pm2 启动我们的 express 项目，并且相关运行参数直接在 pm2.json 中配置好了。相关配置项表示的意义在下面文件中都已经注释说明&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;apps&amp;quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;express_project&amp;quot;&lt;/span&gt;,       &lt;span class=&#34;comment&#34;&gt;// 项目名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;script&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;app.js&amp;quot;&lt;/span&gt;,              &lt;span class=&#34;comment&#34;&gt;// 执行文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;cwd&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;./&amp;quot;&lt;/span&gt;,                     &lt;span class=&#34;comment&#34;&gt;// 根目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;args&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,                      &lt;span class=&#34;comment&#34;&gt;// 传递给脚本的参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;interpreter&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,               &lt;span class=&#34;comment&#34;&gt;// 指定的脚本解释器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;interpreter_args&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,          &lt;span class=&#34;comment&#34;&gt;// 传递给解释器的参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;watch&amp;quot;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,                   &lt;span class=&#34;comment&#34;&gt;// 是否监听文件变动然后重启&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;ignore_watch&amp;quot;&lt;/span&gt;: [                &lt;span class=&#34;comment&#34;&gt;// 不用监听的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;node_modules&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;public&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;exec_mode&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;cluster_mode&amp;quot;&lt;/span&gt;,     &lt;span class=&#34;comment&#34;&gt;// 应用启动模式，支持 fork 和 cluster 模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;instances&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;max&amp;quot;&lt;/span&gt;,              &lt;span class=&#34;comment&#34;&gt;// 应用启动实例个数，仅在 cluster 模式有效 默认为 fork&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;error_file&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;./logs/app-err.log&amp;quot;&lt;/span&gt;,         &lt;span class=&#34;comment&#34;&gt;// 错误日志文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;out_file&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;./logs/app-out.log&amp;quot;&lt;/span&gt;,           &lt;span class=&#34;comment&#34;&gt;// 正常日志文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;merge_logs&amp;quot;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,                         &lt;span class=&#34;comment&#34;&gt;// 设置追加日志而不是新建日志&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;log_date_format&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;YYYY-MM-DD HH:mm:ss&amp;quot;&lt;/span&gt;,   &lt;span class=&#34;comment&#34;&gt;// 指定日志文件的时间格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;min_uptime&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;60s&amp;quot;&lt;/span&gt;,                        &lt;span class=&#34;comment&#34;&gt;// 应用运行少于时间被认为是异常启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;max_restarts&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;,                         &lt;span class=&#34;comment&#34;&gt;// 最大异常重启次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;autorestart&amp;quot;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,                        &lt;span class=&#34;comment&#34;&gt;// 默认为 true, 发生异常的情况下自动重启&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;restart_delay&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;60&amp;quot;&lt;/span&gt;                       &lt;span class=&#34;comment&#34;&gt;// 异常重启情况下，延时重启时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;env&amp;quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;string&#34;&gt;&amp;quot;NODE_ENV&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;production&amp;quot;&lt;/span&gt;,                &lt;span class=&#34;comment&#34;&gt;// 环境参数，当前指定为生产环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;string&#34;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;env_dev&amp;quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;NODE_ENV&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;development&amp;quot;&lt;/span&gt;,              &lt;span class=&#34;comment&#34;&gt;// 环境参数，当前指定为开发环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;env_test&amp;quot;&lt;/span&gt;: &amp;#123;                               &lt;span class=&#34;comment&#34;&gt;// 环境参数，当前指定为测试环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;NODE_ENV&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;高阶应用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#高阶应用&#34;&gt;#&lt;/a&gt; 高阶应用&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;负载均衡&lt;br&gt;
可以使用 -i 参数配置集群数，实现负载均衡，相关命令如下&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 start app.js -i 3 // 开启三个进程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 start app.js -i max // 根据机器CPU核数，开启对应数目的进程&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;日志查看&lt;br&gt;
我们可以通过打开日志文件查看日志外，还可以通过 pm2 logs 来查看实时日志，这点有对于线上问题排查；日志查看命令如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 logs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;监控&lt;br&gt;
我们可以使用以下命令，查看当前通过 pm2 运行的进程的状态；&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 monit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;linux&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux&#34;&gt;#&lt;/a&gt; Linux&lt;/h1&gt;
&lt;h2 id=&#34;认识-linux&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#认识-linux&#34;&gt;#&lt;/a&gt; 认识 Linux&lt;/h2&gt;
&lt;p&gt;是一个基于 POSIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。它能运行主要的 Unix 工具软件、应用程序和网络协议。它支持 32 位和 64 位硬件。Linux 继承了 Unix 以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用 SSH 连接服务器&lt;br&gt;
 window 安装 SSH（安装地址） &lt;a href=&#34;http://www.mls-software.com/opensshd.html&#34;&gt;mls-software.com&lt;/a&gt;&lt;br&gt;
Macbook 免安装自带&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用方式&lt;br&gt;
打开终端，输入：&lt;br&gt;
 &lt;code&gt;ssh  账号默认root@服务器地址&lt;/code&gt; &lt;br&gt;
例子：  &lt;code&gt;ssh root@123.456.789&lt;/code&gt;  然后选择 Y ，然后输入密码即可&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本命令&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ls&lt;/code&gt;  : 用来查看当前的目录的文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt;  : 用来切换目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wget&lt;/code&gt;  : 用来下载一些东西&lt;br&gt;
下载 nodejs:  &lt;code&gt;wget https://cdn.npmmirror.com/binaries/node/v14.19.1/node-v14.19.1-linux-x64.tar.xz&lt;/code&gt; &lt;br&gt;
 下载完成后解压，使用 &lt;code&gt;tar&lt;/code&gt;  命令：&lt;/li&gt;
&lt;li&gt;-c: 压缩&lt;/li&gt;
&lt;li&gt;-x：解压&lt;/li&gt;
&lt;li&gt;-t：查看内容&lt;/li&gt;
&lt;li&gt;-r：向压缩归档文件末尾追加文件&lt;/li&gt;
&lt;li&gt;-u：更新原压缩包中的文件&lt;br&gt;
这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的:&lt;/li&gt;
&lt;li&gt;-z：有 gzip 属性的&lt;/li&gt;
&lt;li&gt;-j：有 bz2 属性的&lt;/li&gt;
&lt;li&gt;-Z：有 compress 属性的&lt;/li&gt;
&lt;li&gt;-v：显示所有过程&lt;/li&gt;
&lt;li&gt;-O：将文件解开到标准输出&lt;br&gt;
下面的参数 - f 是必须的:-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;tar -xf all.tar&lt;/code&gt; : 这条命令是解出 all.tar 包中所有文件，-x 是解开的意思&lt;br&gt;
 &lt;code&gt;tar -cf all.tar *.jpg&lt;/code&gt;  这条命令是将所有.jpg 的文件打成一个名为 all.tar 的包。-c 是表示产生新的包，-f 指定包的文件名。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;配置环境变量&lt;br&gt;
 &lt;code&gt;pwd&lt;/code&gt;  用于显示工作目录&lt;br&gt;
使用 pwd 命令获取 node bin 的位置&lt;br&gt;
前往根目录下面的 etc/profile 此文件涉及系统的环境，即环境变量相关。这里修改会对所有用户起作用&lt;br&gt;
使用 vi 命令编辑该文件 vi profile&lt;br&gt;
 然后按一下 I 键 进入编辑模式&lt;br&gt;
在最后一行添加： &lt;code&gt;export PATH=$PATH:你的目录/node-v14.19.1-linux-x64/bin&lt;/code&gt; &lt;br&gt;
 然后执行 source profile 或者重启 linux&lt;br&gt;
 配置淘宝代理 npm config set registry &lt;a href=&#34;https://registry.npm.taobao.org&#34;&gt;https://registry.npm.taobao.org&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;linux-文件属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-文件属性&#34;&gt;#&lt;/a&gt; Linux 文件属性&lt;/h2&gt;
&lt;h3 id=&#34;ls-l-查看文件属性信息可简写为ll&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ls-l-查看文件属性信息可简写为ll&#34;&gt;#&lt;/a&gt;  &lt;code&gt;ls -l&lt;/code&gt;  查看文件属性信息 (可简写为 &lt;code&gt;ll&lt;/code&gt; )&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;首字母作用&lt;br&gt;
文件的开头对应是 -&lt;br&gt;
 目录开头对应的是 d&lt;br&gt;
 快捷方式对应的是 l&lt;br&gt;
U 盘对应的是 b&lt;br&gt;
 鼠标键盘等硬件对应的 c&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;rwx&lt;/code&gt; : 读 | 写 | 可执行，每三个一组（该文件创建者，该文件所在的用户组，其他用户权限）&lt;br&gt;
 &lt;code&gt;-&lt;/code&gt;  为缺少权限，如缺少 “可执行” 权限，则为 &lt;code&gt;rw-&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux-权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-权限&#34;&gt;#&lt;/a&gt; Linux 权限&lt;/h2&gt;
&lt;p&gt;RWX 分别是可读 可写 可执行权限，这个权限我们可以修改使用 chmod 777 文件名&lt;br&gt;
我们先学习一组规律：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;读 ------R 对应数字 4&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;写 ------W 对应数字 2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可执行 -----X 对应数字 1&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以 7 就是可读可写可执行权限&lt;/p&gt;
</content>
        <category term="Nginx" />
        <category term="Linux" />
        <updated>2023-05-29T10:20:34.000Z</updated>
    </entry>
</feed>
