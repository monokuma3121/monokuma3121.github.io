{
    "version": "https://jsonfeed.org/version/1",
    "title": "Eucli • All posts by \"vuerouter\" tag",
    "description": null,
    "home_page_url": "https://eucli.top",
    "items": [
        {
            "id": "https://eucli.top/2023/04/14/VueRouter/",
            "url": "https://eucli.top/2023/04/14/VueRouter/",
            "title": "VueRouter",
            "date_published": "2023-04-14T12:58:34.000Z",
            "content_html": "<h1 id=\"vue-router\"><a class=\"markdownIt-Anchor\" href=\"#vue-router\">#</a> Vue Router</h1>\n<ul>\n<li>前言：<br>\n因为 vue 是单页应用，不会有那么多 html 让我们跳转，所有要使用路由做页面的跳转</li>\n</ul>\n<p>Vue 路由允许我们通过不同的 URL 访问不同的内容。通过 Vue 可以实现多视图的单页 Web 应用</p>\n<ul>\n<li>快速上手</li>\n</ul>\n<ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add vue-router@4</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><code>src/router/index.ts</code> :</li>\n</ol>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引入路由对象</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createRouter, createWebHistory, createWebHashHistory, createMemoryHistory, <span class=\"title class_\">RouteRecordRaw</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//vue2 mode history vue3 createWebHistory</span></span><br><span class=\"line\"><span class=\"comment\">//vue2 mode  hash  vue3  createWebHashHistory</span></span><br><span class=\"line\"><span class=\"comment\">//vue2 mode abstact vue3  createMemoryHistory</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//路由数组的类型 RouteRecordRaw</span></span><br><span class=\"line\"><span class=\"comment\">// 定义一些路由</span></span><br><span class=\"line\"><span class=\"comment\">// 每个路由都需要映射到一个组件。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">routes</span>: <span class=\"title class_\">Array</span>&lt;<span class=\"title class_\">RouteRecordRaw</span>&gt; = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../components/a.vue&quot;</span>),</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/register&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../components/b.vue&quot;</span>),</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  routes,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//导出router</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>使用<router-link>和<router-view>：<br>\n请注意，我们没有使用常规的 a 标签，而是使用一个自定义组件 router-link 来创建链接。这使得 Vue Router 可以在不重新加载页面的情况下更改 URL，处理 URL 的生成以及编码。我们将在后面看到如何从这些功能中获益。<br>\nrouter-view 将显示与 url 对应的组件。你可以把它放在任何地方，以适应你的布局。</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;h1&gt;小满最骚&lt;/h1&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      &lt;!--使用 router-link 组件进行导航 --&gt;</span><br><span class=\"line\">      &lt;!--通过传递 `to` 来指定链接 --&gt;</span><br><span class=\"line\">      &lt;!--`&lt;router-link&gt;` 将呈现一个带有正确 `href` 属性的 `&lt;a&gt;` 标签--&gt;</span><br><span class=\"line\">      &lt;router-link tag=&quot;div&quot; to=&quot;/&quot;&gt;跳转a&lt;/router-link&gt;</span><br><span class=\"line\">      &lt;router-link tag=&quot;div&quot; style=&quot;margin-left:200px&quot; to=&quot;/register&quot;&gt;跳转b&lt;/router-link&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;hr /&gt;</span><br><span class=\"line\">    &lt;!-- 路由出口 --&gt;</span><br><span class=\"line\">    &lt;!-- 路由匹配到的组件将渲染在这里 --&gt;</span><br><span class=\"line\">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>最后在 main.ts 挂载</li>\n</ol>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;./App.vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&quot;./router&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>).<span class=\"title function_\">use</span>(router).<span class=\"title function_\">mount</span>(<span class=\"string\">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"编程式导航\"><a class=\"markdownIt-Anchor\" href=\"#编程式导航\">#</a> 编程式导航</h2>\n<p>除了使用  <code>&lt;router-link&gt;</code>  创建 a 标签来定义导航链接，我们还可以借助 router 的实例方法，通过编写代码来实现。<br>\n想要导航到不同的 URL，可以使用 router.push 方法。这个方法会向 history 栈添加一个新的记录，所以，当用户点击浏览器后退按钮时，会回到之前的 URL。<br>\n当你点击 <code>&lt;router-link&gt;</code>  时，内部会调用这个方法，所以点击  <code>&lt;router-link :to=&quot;...&quot;&gt; </code> (声明式) 相当于调用 <code>router.push(...)</code> (编程式).</p>\n<ol>\n<li>编程式导航，字符串模式</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useRouter &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">useRouter</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">toPage</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  router.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/reg&quot;</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>编程式导航，对象模式</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useRouter &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">useRouter</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">toPage</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  router.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/reg&quot;</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>编程式导航，命名式路由模式</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useRouter &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">useRouter</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">toPage</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  router.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;Reg&quot;</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"命名路由\"><a class=\"markdownIt-Anchor\" href=\"#命名路由\">#</a> 命名路由</h2>\n<p>除了 path 之外，你还可以为任何路由提供 name。这有以下优点：</p>\n<ol>\n<li>没有硬编码的 URL</li>\n<li>params 的自动编码 / 解码。</li>\n<li>防止你在 url 中出现打字错误。</li>\n<li>绕过路径排序（如显示一个）</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">routes</span>: <span class=\"title class_\">Array</span>&lt;<span class=\"title class_\">RouteRecordRaw</span>&gt; = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;Login&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../components/login.vue&quot;</span>),</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/reg&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;Reg&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../components/reg.vue&quot;</span>),</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<p>router-link 跳转方式需要改变 变为对象并且有对应 name:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>小满最骚<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123;name:&#x27;Login&#x27;&#125;&quot;</span>&gt;</span>Login<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-left:10px&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123;name:&#x27;Reg&#x27;&#125;&quot;</span>&gt;</span>Reg<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"历史记录\"><a class=\"markdownIt-Anchor\" href=\"#历史记录\">#</a> 历史记录</h2>\n<ul>\n<li>replace 的使用<br>\n采用 replace 进行页面的跳转会同样也会创建渲染新的 Vue 组件，但是在 history 中其不会重复保存记录，而是替换原有的 vue 组件；</li>\n</ul>\n<ol>\n<li>router-link 使用方法</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">replace</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/&quot;</span>&gt;</span>Login<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">replace</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-left:10px&quot;</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/reg&quot;</span>&gt;</span>Reg<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>编程式导航</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;toPage(&#x27;/&#x27;)&quot;</span>&gt;</span>Login<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;toPage(&#x27;/reg&#x27;)&quot;</span>&gt;</span>Reg<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useRouter &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">useRouter</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">toPage</span> = (<span class=\"params\">url: string</span>) =&gt; &#123;</span><br><span class=\"line\">  router.<span class=\"title function_\">replace</span>(url);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>横跨历史<br>\n该方法采用一个整数作为参数，表示在历史堆栈中前进或后退多少步</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;next&quot;</span>&gt;</span>前进<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;prev&quot;</span>&gt;</span>后退<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">next</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">//前进 数量不限于1</span></span><br><span class=\"line\">  router.<span class=\"title function_\">go</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">prev</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">//后退</span></span><br><span class=\"line\">  router.<span class=\"title function_\">back</span>();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"路由传参\"><a class=\"markdownIt-Anchor\" href=\"#路由传参\">#</a> 路由传参</h2>\n<ul>\n<li>useRouter：传参</li>\n<li>useRoute：接收参数</li>\n</ul>\n<p>传递参数两种传参方式（query/params）</p>\n<ol>\n<li>query 传参（用 path）<br>\nquery 只能接收一个对象，这里的 item 一个就是对象<br>\n传参:</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useRouter &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">userRouter</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">toDetail</span> = (<span class=\"params\">item</span>) =&gt; &#123;</span><br><span class=\"line\">  router.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">query</span>: item, <span class=\"comment\">//query只能接收一个对象，这里的item一个就是对象</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>接收参数：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> route = <span class=\"title function_\">useRoute</span>();</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>品牌：&#123;&#123; route.query?.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>价格：&#123;&#123; route.query?.price &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>ID：&#123;&#123; route.query?.id &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>params 传参（用 name）<br>\nparams 存在于内存中，刷新会丢失<br>\n传参:</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">…………</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">toDetail</span> = (<span class=\"params\">item</span>) =&gt; &#123;</span><br><span class=\"line\">  router.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;Login&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">params</span>: item, <span class=\"comment\">//params存在于内存中，刷新会丢失</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>接收参数：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> route = <span class=\"title function_\">useRoute</span>();</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>品牌：&#123;&#123; route.params?.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>价格：&#123;&#123; route.params?.price &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>ID：&#123;&#123; route.params?.id &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>动态路由参数<br>\n很多时候，我们需要将给定匹配模式的路由映射到同一个组件。例如，我们可能有一个 User 组件，它应该对所有用户进行渲染，但用户 ID 不同。在 Vue Router 中，我们可以在路径中使用一个动态字段来实现，我们称之为 路径参数<br>\n使用带有参数的路由时需要注意的是，当用户从  <code>/users/johnny </code> 导航到 <code>/users/jolyne</code>  时，相同的组件实例将被重复使用。因为两个路由都渲染同个组件，比起销毁再创建，复用则显得更加高效。不过，这也意味着组件的生命周期钩子不会被调用。</li>\n</ol>\n<p>路径参数 用冒号  <code>:</code>  表示。当一个路由被匹配时，它的 params 的值将在每个组件<br>\n需要先配置路由：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">routes</span>: <span class=\"title class_\">Array</span>&lt;<span class=\"title class_\">RouteRecordRaw</span>&gt; = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;Login&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../components/login.vue&quot;</span>),</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"comment\">//动态路由参数</span></span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/reg/:id&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;Reg&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../components/reg.vue&quot;</span>),</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<p>传参：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//路由的path要改成动态（/:id）</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">toDetail</span> = (<span class=\"params\">item</span>) =&gt; &#123;</span><br><span class=\"line\">  router.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;Login&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">params</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">id</span>: item.<span class=\"property\">id</span>, <span class=\"comment\">//此时刷新参数不会丢失</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>接收参数：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; data &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./list.json&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> route = <span class=\"title function_\">useRoute</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> item = data.<span class=\"title function_\">find</span>(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> v.<span class=\"property\">id</span> === <span class=\"title class_\">Number</span>(route.<span class=\"property\">params</span>.<span class=\"property\">id</span>));</span><br></pre></td></tr></table></figure>\n<ul>\n<li>二者的区别</li>\n</ul>\n<ol>\n<li>\n<p>query 传参配置的是 path，而 params 传参配置的是 name，在 params 中配置 path 无效</p>\n</li>\n<li>\n<p>query 在路由配置不需要设置参数，而 params 必须设置</p>\n</li>\n<li>\n<p>query 传递的参数会显示在地址栏中</p>\n</li>\n<li>\n<p>params 传参刷新会无效，但是 query 会保存传递过来的值，刷新不变；</p>\n</li>\n<li>\n<p>路由配置</p>\n</li>\n</ol>\n<h2 id=\"sensitive-与-strict-路由配置\"><a class=\"markdownIt-Anchor\" href=\"#sensitive-与-strict-路由配置\">#</a> Sensitive 与 strict 路由配置</h2>\n<p>默认情况下，所有路由是不区分大小写的，并且能匹配带有或不带有尾部斜线的路由。例如，路由 <code>/users</code>  将匹配  <code>/users</code> 、 <code>/users/</code> 、甚至 <code> /Users/</code> 。可以通过 <code> strict</code>  和  <code>sensitive </code> 选项来修改:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// 将匹配 /users/posva 而非：</span></span><br><span class=\"line\">    <span class=\"comment\">// - /users/posva/ 当 strict: true</span></span><br><span class=\"line\">    <span class=\"comment\">// - /Users/posva 当 sensitive: true</span></span><br><span class=\"line\">    &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/users/:id&#x27;</span>, <span class=\"attr\">sensitive</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 将匹配 /users, /Users, 以及 /users/42 而非 /users/ 或 /users/42/</span></span><br><span class=\"line\">    &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/users/:id?&#x27;</span> &#125;,</span><br><span class=\"line\">  ]</span><br><span class=\"line\">  <span class=\"attr\">strict</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// applies to all routes</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"可选参数\"><a class=\"markdownIt-Anchor\" href=\"#可选参数\">#</a> 可选参数</h2>\n<p>可以通过使用？修饰符 (0 个或 1 个) 将一个参数标记为可选：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">  <span class=\"comment\">// 匹配 /users 和 /users/posva</span></span><br><span class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">&quot;/users/:userId?&quot;</span> &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<h2 id=\"嵌套路由\"><a class=\"markdownIt-Anchor\" href=\"#嵌套路由\">#</a> 嵌套路由</h2>\n<p>一些应用程序的 UI 由多层嵌套的组件组成。在这种情况下，URL 的片段通常对应于特定的嵌套组件结构，例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">routes</span>: <span class=\"title class_\">Array</span>&lt;<span class=\"title class_\">RouteRecordRaw</span>&gt; = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/user&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../components/footer.vue&quot;</span>),</span><br><span class=\"line\">    <span class=\"attr\">children</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;Login&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../components/login.vue&quot;</span>),</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&quot;reg&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;Reg&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../components/reg.vue&quot;</span>),</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<p>需要在路由中配置  <code>children</code> , 不写 <code>/</code></p>\n<h2 id=\"命名视图\"><a class=\"markdownIt-Anchor\" href=\"#命名视图\">#</a> 命名视图</h2>\n<p>有时候想同时 (同级) 展示多个视图，而不是嵌套展示，例如创建一个布局，有  <code>sidebar </code> (侧导航) 和  <code>main </code> (主内容) 两个视图，这个时候命名视图就派上用场了。你可以在界面中拥有多个单独命名的视图，而不是只有一个单独的出口。如果  <code>router-view </code> 没有设置名字，那么默认为 default。<br>\n命名视图的概念非常类似于 “具名插槽”，并且视图的默认名称也是 default。</p>\n<ul>\n<li>一个视图使用一个组件渲染，因此对于同个路由，多个视图就需要多个组件。确保正确使用 components 配置 (带上 s)：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createRouter, createWebHistory, <span class=\"title class_\">RouteRecordRaw</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">routes</span>: <span class=\"title class_\">Array</span>&lt;<span class=\"title class_\">RouteRecordRaw</span>&gt; = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">//也可以直接用名字匹配 default: User, sidebar: Sidebar</span></span><br><span class=\"line\">      <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../components/layout/menu.vue&quot;</span>),</span><br><span class=\"line\">      <span class=\"attr\">header</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../components/layout/header.vue&quot;</span>),</span><br><span class=\"line\">      <span class=\"attr\">content</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../components/layout/content.vue&quot;</span>),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  routes,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>对应 Router-view 通过 name 对应组件</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;header&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"重定向-redirect-和别名-alias\"><a class=\"markdownIt-Anchor\" href=\"#重定向-redirect-和别名-alias\">#</a> 重定向 redirect 和别名 alias</h2>\n<h4 id=\"redirect\"><a class=\"markdownIt-Anchor\" href=\"#redirect\">#</a> redirect</h4>\n<ul>\n<li>重定向也是通过 routes 配置来完成，下面例子是从 <code> /home</code>  重定向到  <code>/</code> ：</li>\n</ul>\n<ol>\n<li>字符串形式配置</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes = [&#123; <span class=\"attr\">path</span>: <span class=\"string\">&quot;/home&quot;</span>, <span class=\"attr\">redirect</span>: <span class=\"string\">&quot;/&quot;</span> &#125;];</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>对象形式配置，重定向的目标也可以是一个命名的路由：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes = [&#123; <span class=\"attr\">path</span>: <span class=\"string\">&quot;/home&quot;</span>, <span class=\"attr\">redirect</span>: &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;homepage&quot;</span> &#125; &#125;];</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>函数模式（可以传参）</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/home&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">redirect</span>: <span class=\"function\">(<span class=\"params\">to</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">query</span>: to.<span class=\"property\">query</span>,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<p>请注意，导航守卫并没有应用在跳转路由上，而仅仅应用在其目标上。在上面的例子中，在  <code>/home</code>  路由中添加  <code>beforeEnter </code> 守卫不会有任何效果。</p>\n<p>在写  <code>redirect </code> 的时候，可以省略  <code>component</code>  配置，因为它从来没有被直接访问过，所以没有组件要渲染。唯一的例外是嵌套路由：如果一个路由记录有  <code>children</code>  和  <code>redirect</code>  属性，它也应该有 <code> component</code>  属性。</p>\n<h4 id=\"alias\"><a class=\"markdownIt-Anchor\" href=\"#alias\">#</a> alias</h4>\n<p>重定向是指当用户访问  <code>/home</code>  时，URL 会被  <code>/</code>  替换，然后匹配成  <code>/</code> 。那么什么是别名呢？<br>\n将  <code>/</code>  别名为  <code>/home</code> ，意味着当用户访问  <code>/home</code>  时，URL 仍然是  <code>/home</code> ，但会被匹配为用户正在访问  <code>/</code> 。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes = [&#123; <span class=\"attr\">path</span>: <span class=\"string\">&quot;/&quot;</span>, <span class=\"attr\">component</span>: <span class=\"title class_\">Homepage</span>, <span class=\"attr\">alias</span>: <span class=\"string\">&quot;/home&quot;</span> &#125;];</span><br></pre></td></tr></table></figure>\n<h2 id=\"路由组件传参\"><a class=\"markdownIt-Anchor\" href=\"#路由组件传参\">#</a> 路由组件传参</h2>\n<ul>\n<li>\n<p>将  <code>props</code>  传递给路由组件</p>\n</li>\n<li>\n<p>命名视图<br>\n对于有命名视图的路由，你必须为每个命名视图定义  <code>props</code>  配置：</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/user/:id&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">components</span>: &#123; <span class=\"attr\">default</span>: <span class=\"title class_\">User</span>, <span class=\"attr\">sidebar</span>: <span class=\"title class_\">Sidebar</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">props</span>: &#123; <span class=\"attr\">default</span>: <span class=\"literal\">true</span>, <span class=\"attr\">sidebar</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<ul>\n<li>布尔模式</li>\n<li>对象模式</li>\n<li>函数模式</li>\n</ul>\n<h2 id=\"路由的默认路径\"><a class=\"markdownIt-Anchor\" href=\"#路由的默认路径\">#</a> 路由的默认路径</h2>\n<p>默认情况下，进入网站的首页，我们希望 <code>&lt;router-view&gt;</code>  渲染首页的内容，但是我们的实现中，默认没有显示首页组件，必须让用户点击才可以。如何可以让路径默认跳到到首页，并且 <code>&lt;router-view&gt;</code>  渲染首页组件呢？</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">&quot;/&quot;</span>, <span class=\"attr\">redirect</span>: <span class=\"string\">&quot;/home&quot;</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">&quot;/home&quot;</span>, <span class=\"attr\">component</span>: <span class=\"title class_\">Home</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">&quot;/about&quot;</span>, <span class=\"attr\">component</span>: <span class=\"title class_\">About</span> &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<p>在 routes 中再配置一个映射， <code>path</code>  配置的是根路径:  <code>/</code> , <code>redirect</code>  是重定向，也就是我们将根路径重定向到 <code>/home</code>  的路径下，这样就可以得到我们想要的结果了</p>\n<h2 id=\"history-模式\"><a class=\"markdownIt-Anchor\" href=\"#history-模式\">#</a> history 模式</h2>\n<h2 id=\"路由懒加载\"><a class=\"markdownIt-Anchor\" href=\"#路由懒加载\">#</a> 路由懒加载</h2>\n<p>当打包构建应用时，JavaScript 包会变得非常大，影响页面加载。如果我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应组件，这样就会更加高效。<br>\n <code>component</code>  可以传入一个组件，也可以接收一个函数，该函数需要放回一个 Promise. 而 <code>import</code>  函数就是返回一个 Promise</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes = [&#123; <span class=\"attr\">path</span>: <span class=\"string\">&quot;/home&quot;</span>, <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;../pages/Home.vue&quot;</span>) &#125;];</span><br></pre></td></tr></table></figure>\n<h2 id=\"路由的其他属性\"><a class=\"markdownIt-Anchor\" href=\"#路由的其他属性\">#</a> 路由的其他属性</h2>\n<p><code>name</code>  属性：路由记录独一无二的名称<br>\n <code>meta</code>  属性：自定义的数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/about&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;about-router&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../pages/About.vue&#x27;</span>),</span><br><span class=\"line\">  <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;why&#x27;</span>,</span><br><span class=\"line\">    age；<span class=\"number\">18</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"路由元信息\"><a class=\"markdownIt-Anchor\" href=\"#路由元信息\">#</a> 路由元信息</h2>\n<ul>\n<li>通过路由记录的 meta 属性可以定义路由的元信息。使用路由元信息可以在路由中附加自定义的数据，例如：</li>\n<li>权限校验标识。</li>\n<li>路由组件的过渡名称。</li>\n<li>路由组件持久化缓存 (keep-alive) 的相关配置。</li>\n<li>标题名称</li>\n</ul>\n<p>我们可以在导航守卫或者是路由对象中访问路由的元信息数据。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(<span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">env</span>.<span class=\"property\">BASE_URL</span>),</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;@/views/Login.vue&quot;</span>),</span><br><span class=\"line\">      <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">title</span>: <span class=\"string\">&quot;登录&quot;</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">&quot;/index&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;@/views/Index.vue&quot;</span>),</span><br><span class=\"line\">      <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">title</span>: <span class=\"string\">&quot;首页&quot;</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>使用 TS 扩展。如果不使用扩展 将会是 unknow 类型</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable language_\">module</span> <span class=\"string\">&quot;vue-router&quot;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">interface</span> <span class=\"title class_\">RouteMeta</span> &#123;</span><br><span class=\"line\">    title?: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"动态路由\"><a class=\"markdownIt-Anchor\" href=\"#动态路由\">#</a> 动态路由</h2>\n<p>我们一般使用动态路由都是后台会返回一个路由表前端通过调接口拿到后处理 (后端处理路由)<br>\n 主要使用的方法就是 router.addRoute</p>\n<h4 id=\"添加路由\"><a class=\"markdownIt-Anchor\" href=\"#添加路由\">#</a> 添加路由</h4>\n<p>动态路由主要通过两个函数实现。 <code>router.addRoute()</code>  和  <code>router.removeRoute()</code> 。它们只注册一个新的路由，也就是说，如果新增加的路由与当前位置相匹配，就需要你用  <code>router.push()</code>  或  <code>router.replace()</code>  来手动导航，才能显示该新路由</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.<span class=\"title function_\">addRoute</span>(&#123; <span class=\"attr\">path</span>: <span class=\"string\">&quot;/about&quot;</span>, <span class=\"attr\">component</span>: <span class=\"title class_\">About</span> &#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除路由\"><a class=\"markdownIt-Anchor\" href=\"#删除路由\">#</a> 删除路由</h4>\n<p>有几个不同的方法来删除现有的路由：</p>\n<ol>\n<li>通过添加一个名称冲突的路由。如果添加与现有途径名称相同的途径，会先删除路由，再添加路由：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.<span class=\"title function_\">addRoute</span>(&#123; <span class=\"attr\">path</span>: <span class=\"string\">&quot;/about&quot;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;about&quot;</span>, <span class=\"attr\">component</span>: <span class=\"title class_\">About</span> &#125;);</span><br><span class=\"line\"><span class=\"comment\">// 这将会删除之前已经添加的路由，因为他们具有相同的名字且名字必须是唯一的</span></span><br><span class=\"line\">router.<span class=\"title function_\">addRoute</span>(&#123; <span class=\"attr\">path</span>: <span class=\"string\">&quot;/other&quot;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;about&quot;</span>, <span class=\"attr\">component</span>: <span class=\"title class_\">Other</span> &#125;);</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>通过调用 router.addRoute () 返回的回调：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> removeRoute = router.<span class=\"title function_\">addRoute</span>(routeRecord);</span><br><span class=\"line\"><span class=\"title function_\">removeRoute</span>(); <span class=\"comment\">// 删除路由如果存在的话</span></span><br></pre></td></tr></table></figure>\n<p>当路由没有名称时，这很有用。 3. 通过使用 router.removeRoute () 按名称删除路由：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.<span class=\"title function_\">addRoute</span>(&#123; <span class=\"attr\">path</span>: <span class=\"string\">&quot;/about&quot;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;about&quot;</span>, <span class=\"attr\">component</span>: <span class=\"title class_\">About</span> &#125;);</span><br><span class=\"line\"><span class=\"comment\">// 删除路由</span></span><br><span class=\"line\">router.<span class=\"title function_\">removeRoute</span>(<span class=\"string\">&quot;about&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，如果你想使用这个功能，但又想避免名字的冲突，可以在路由中使用 Symbol 作为名字。</p>\n<ul>\n<li>当路由被删除时，所有的别名和子路由也会被同时删除</li>\n</ul>\n<h4 id=\"查看现有路由\"><a class=\"markdownIt-Anchor\" href=\"#查看现有路由\">#</a> 查看现有路由</h4>\n<p>Vue Router 提供了两个功能来查看现有的路由：</p>\n<ol>\n<li>router.hasRoute ()：检查路由是否存在。</li>\n<li>router.getRoutes ()：获取一个包含所有路由记录的数组。</li>\n</ol>\n<h4 id=\"案例\"><a class=\"markdownIt-Anchor\" href=\"#案例\">#</a> 案例</h4>\n<ul>\n<li>前端代码</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">initRouter</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> result = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;http://localhost:9999/login&quot;</span>, &#123; <span class=\"attr\">params</span>: formInline &#125;);</span><br><span class=\"line\">  result.<span class=\"property\">data</span>.<span class=\"property\">route</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">v: any</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    router.<span class=\"title function_\">addRoute</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">path</span>: v.<span class=\"property\">path</span>,</span><br><span class=\"line\">      <span class=\"attr\">name</span>: v.<span class=\"property\">name</span>,</span><br><span class=\"line\">      <span class=\"comment\">//这儿不能使用@</span></span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">`../views/<span class=\"subst\">$&#123;v.component&#125;</span>`</span>),</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    router.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/index&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(router.<span class=\"title function_\">getRoutes</span>());</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>后端代码 nodejs express</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> express, &#123; <span class=\"title class_\">Express</span>, <span class=\"title class_\">Request</span>, <span class=\"title class_\">Response</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;express&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">app</span>: <span class=\"title class_\">Express</span> = <span class=\"title function_\">express</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;/login&quot;</span>, <span class=\"function\">(<span class=\"params\">req: Request, res: Response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  res.<span class=\"title function_\">header</span>(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>, <span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (req.<span class=\"property\">query</span>.<span class=\"property\">user</span> == <span class=\"string\">&quot;admin&quot;</span> &amp;&amp; req.<span class=\"property\">query</span>.<span class=\"property\">password</span> == <span class=\"string\">&quot;123456&quot;</span>) &#123;</span><br><span class=\"line\">    res.<span class=\"title function_\">json</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">route</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">path</span>: <span class=\"string\">&quot;/demo1&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">name</span>: <span class=\"string\">&quot;Demo1&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">component</span>: <span class=\"string\">&quot;demo1.vue&quot;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">path</span>: <span class=\"string\">&quot;/demo2&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">name</span>: <span class=\"string\">&quot;Demo2&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">component</span>: <span class=\"string\">&quot;demo2.vue&quot;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">path</span>: <span class=\"string\">&quot;/demo3&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">name</span>: <span class=\"string\">&quot;Demo3&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">component</span>: <span class=\"string\">&quot;demo3.vue&quot;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    res.<span class=\"title function_\">json</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">code</span>: <span class=\"number\">400</span>,</span><br><span class=\"line\">      <span class=\"attr\">mesage</span>: <span class=\"string\">&quot;账号密码错误&quot;</span>,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">9999</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;http://localhost:9999&quot;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"notfound\"><a class=\"markdownIt-Anchor\" href=\"#notfound\">#</a> NotFound</h3>\n<p>对于没有匹配到的路由，我们通常会匹配到固定的某个页面，比如 NotFound 的错误页面中，这个时候我们可编写一个动态路由用于匹配所有的页面；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">path</span>:<span class=\"string\">&#x27;/:pathMatch(.*)&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../pages/NotFound.vue&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"路由的嵌套\"><a class=\"markdownIt-Anchor\" href=\"#路由的嵌套\">#</a> 路由的嵌套</h2>\n<p>什么是路由的嵌套？<br>\n目前我们匹配的 Home、About、User 等都属于底层路由，我们在它们之间可以来回进行切换。但是，我们 Home 页面本身，也可能会在多个组件之间来回切换：比如 Home 中包括 Product、Message，它们可以在 Home 内部来回切换。<br>\n这个时候我们就需要使用嵌套路由，在 Home 中也使用 router-view 来占位之后需要渲染的组件。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"attr\">path</span>:<span class=\"string\">&#x27;/home&#x27;</span>,</span><br><span class=\"line\"><span class=\"attr\">component</span>:<span class=\"function\">()=&gt;</span><span class=\"keyword\">import</span>(<span class=\"string\">&#x27;.../pages/Home.vue&#x27;</span>)</span><br><span class=\"line\"><span class=\"attr\">children</span>: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>:<span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">redirect</span>:<span class=\"string\">&#x27;/home/product&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>:<span class=\"string\">&#x27;product&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>:<span class=\"function\">()=&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../pages/HomeProduct.vue&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>:<span class=\"string\">&#x27;message&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>:<span class=\"function\">()=&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../pages/HomeMessage.vue&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>query 方式的参数</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;useRouter&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-rourer&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> route = <span class=\"title function_\">useRouter</span>()</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">jumpToHome</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  router.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>:<span class=\"string\">&#x27;/profile&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">quert</span>: &#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;why&#x27;</span>,age：<span class=\"number\">18</span>&#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"router-link-的-v-slot\"><a class=\"markdownIt-Anchor\" href=\"#router-link-的-v-slot\">#</a> router-link 的 v-slot</h3>\n<h3 id=\"router-view-的-v-slot\"><a class=\"markdownIt-Anchor\" href=\"#router-view-的-v-slot\">#</a> router-view 的 v-slot</h3>\n<p><code>router-view</code>  也提供给我们一个插槽，可以用于  <code>&lt;transition&gt;</code>  和  <code>&lt;keep-alive&gt;</code>  组件来包裹你的路由组件：</p>\n<ul>\n<li><code>Component</code> ：要渲染的组件</li>\n<li><code>route</code> ：解析出的标准化路由对象</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;router-view v-slot=&quot;&#123; Component &#125;&quot;&gt;</span><br><span class=\"line\">  &lt;transition name=&quot;why&quot;&gt;</span><br><span class=\"line\">    &lt;keep-alive&gt;</span><br><span class=\"line\">      &lt;component :is=&quot;Component&quot;&gt;&lt;/component&gt;</span><br><span class=\"line\">    &lt;/keep-alive&gt;</span><br><span class=\"line\">  &lt;/transition&gt;</span><br><span class=\"line\">&lt;/router-view&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"动态添加路由\"><a class=\"markdownIt-Anchor\" href=\"#动态添加路由\">#</a> 动态添加路由</h2>\n<p>某些情况下我们可能需要动态的来添加路由：比如根据用户不同的权限，注册不同的路由。这个时候我们可以使用一个方法  <code>addRoute</code></p>\n<ul>\n<li>添加顶级路由：<br>\n![](<a href=\"https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/P%25I_0((DM%60ITK%25DRPCF2COO.png)\">https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/P%I_0((DM`ITK%DRPCF2COO.png)</a></li>\n<li>添加二级路由对象<br>\n<img src=\"https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/1RB3VFZZHORS82DD%60FO_C5C.png\" alt=\"\"></li>\n</ul>\n<h2 id=\"动态删除路由\"><a class=\"markdownIt-Anchor\" href=\"#动态删除路由\">#</a> 动态删除路由</h2>\n<ol>\n<li>添加一个 name 相同的路由</li>\n<li>通过 removeRoute 方法，传入路由的名称</li>\n<li>通过 addRoute 方法的返回值回调<br>\n<img src=\"https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/OJLWP%5DY@S80JCYCDWFNM81Z.png\" alt=\"\"><br>\n<img src=\"https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/H%5DFZO@8N@%5BW_D%5DYEU5E5S0K.png\" alt=\"\"><br>\n<img src=\"https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/I$OQ6ZJH$_Q%5BI%5BJ%7B6%60MLIPJ.png\" alt=\"\"></li>\n</ol>\n<h2 id=\"路由导航守卫\"><a class=\"markdownIt-Anchor\" href=\"#路由导航守卫\">#</a> 路由导航守卫</h2>\n<h4 id=\"全局前置守卫\"><a class=\"markdownIt-Anchor\" href=\"#全局前置守卫\">#</a> 全局前置守卫</h4>\n<h2 id=\"登录守卫功能-routerbeforeeach\"><a class=\"markdownIt-Anchor\" href=\"#登录守卫功能-routerbeforeeach\">#</a> 登录守卫功能 router.beforeEach</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"function\">(<span class=\"params\">to, form, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(to, form);</span><br><span class=\"line\">  <span class=\"title function_\">next</span>();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>每个守卫方法接收三个参数：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">to: Route， 即将要进入的目标 路由对象；</span><br><span class=\"line\">from: Route，当前导航正要离开的路由；</span><br><span class=\"line\">next(): 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 confirmed (确认的)。</span><br><span class=\"line\">next(<span class=\"literal\">false</span>): 中断当前的导航。如果浏览器的 URL 改变了 (可能是用户手动或者浏览器后退按钮)，那么 URL 地址会重置到 from 路由对应的地址。</span><br><span class=\"line\">next(<span class=\"string\">&#x27;/&#x27;</span>) 或者 next(&#123; path: <span class=\"string\">&#x27;/&#x27;</span> &#125;): 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>案例：权限判断</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> whileList = [<span class=\"string\">&quot;/&quot;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> token = <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;token&quot;</span>);</span><br><span class=\"line\">  <span class=\"comment\">//白名单 有值 或者登陆过存储了token信息可以跳转 否则就去登录页面</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (whileList.<span class=\"title function_\">includes</span>(to.<span class=\"property\">path</span>) || token) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">next</span>();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">next</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>比如我们完成一个功能，只有登录后才能看到其他页面：<br>\n<img src=\"https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/4%606%60HY%60G8ABQ2R_B\" alt=\"\">T)UFO1.png)<br>\n![](<a href=\"https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/6U0\">https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/6U0</a>{1(~VVLP7IR99W5WGRHU.png)</p>\n<h4 id=\"全局后置守卫\"><a class=\"markdownIt-Anchor\" href=\"#全局后置守卫\">#</a> 全局后置守卫</h4>\n<p>使用场景一般可以用来做 loadingBar</p>\n<p>你也可以注册全局后置钩子，然而和守卫不同的是，这些钩子不会接受 next 函数也不会改变导航本身：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.<span class=\"title function_\">afterEach</span>(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Vnode</span>.<span class=\"property\">component</span>?.<span class=\"property\">exposed</span>?.<span class=\"title function_\">endLoading</span>();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>loadingBar 组件</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wraps&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;bar&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;bar&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;ts&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">import</span> &#123; ref, onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> speed = ref&lt;number&gt;(<span class=\"number\">1</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> bar = ref&lt;<span class=\"title class_\">HTMLElement</span>&gt;();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> timer = ref&lt;number&gt;(<span class=\"number\">0</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> <span class=\"title function_\">startLoading</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> dom = bar.<span class=\"property\">value</span> <span class=\"keyword\">as</span> <span class=\"title class_\">HTMLElement</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    speed.<span class=\"property\">value</span> = <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    timer.<span class=\"property\">value</span> = <span class=\"variable language_\">window</span>.<span class=\"title function_\">requestAnimationFrame</span>(<span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">if</span> (speed.<span class=\"property\">value</span> &lt; <span class=\"number\">90</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        speed.<span class=\"property\">value</span> += <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        dom.<span class=\"property\">style</span>.<span class=\"property\">width</span> = speed.<span class=\"property\">value</span> + <span class=\"string\">&quot;%&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        timer.<span class=\"property\">value</span> = <span class=\"variable language_\">window</span>.<span class=\"title function_\">requestAnimationFrame</span>(fn);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        speed.<span class=\"property\">value</span> = <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"title function_\">cancelAnimationFrame</span>(timer.<span class=\"property\">value</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> <span class=\"title function_\">endLoading</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> dom = bar.<span class=\"property\">value</span> <span class=\"keyword\">as</span> <span class=\"title class_\">HTMLElement</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">window</span>.<span class=\"title function_\">requestAnimationFrame</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        speed.<span class=\"property\">value</span> = <span class=\"number\">100</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        dom.<span class=\"property\">style</span>.<span class=\"property\">width</span> = speed.<span class=\"property\">value</span> + <span class=\"string\">&quot;%&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;, <span class=\"number\">500</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">defineExpose</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    startLoading,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    endLoading,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;less&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-class\">.wraps</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">position</span>: fixed;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">height</span>: <span class=\"number\">2px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.bar</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"attribute\">height</span>: inherit;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"attribute\">background</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>mian.ts</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> loadingBar <span class=\"keyword\">from</span> <span class=\"string\">&quot;./components/loadingBar.vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Vnode</span> = <span class=\"title function_\">createVNode</span>(loadingBar);</span><br><span class=\"line\"><span class=\"title function_\">render</span>(<span class=\"title class_\">Vnode</span>, <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Vnode</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Vnode</span>.<span class=\"property\">component</span>?.<span class=\"property\">exposed</span>?.<span class=\"title function_\">startLoading</span>();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">afterEach</span>(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Vnode</span>.<span class=\"property\">component</span>?.<span class=\"property\">exposed</span>?.<span class=\"title function_\">endLoading</span>();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h1 id=\"vuex-状态管理\"><a class=\"markdownIt-Anchor\" href=\"#vuex-状态管理\">#</a> Vuex 状态管理</h1>\n<ul>\n<li>\n<p>什么是状态管理？<br>\n在开发中，应用程序需要处理各种各样的数据，这些<br>\n数据需要保存在我们应用程序中的某一个位置，对于这些数据<br>\n的管理我们就称之为是 状态管理</p>\n</li>\n<li>\n<p>在前面我们是如何管理自己的状态呢？<br>\n在 Vue 开发中，我们使用组件化的开发方式，而在组件中我们定义 <code>data</code>  或者在 <code>setup</code>  中返回使用的数据，这些数据我们称之为 <code>state</code> <br>\n 在模块 <code>template</code>  中我们可以使用这些数据，模块最终会被渲染成 DOM，我们称之为 <code>View</code> <br>\n 在模块中我们会产生一些行为事件，处理这些行为事件时，<br>\n有可能会修改 state，这些行为事件我们称之为 <code>actions</code> <br>\n![](<a href=\"https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/%25MA5OURUF\">https://eucli-1314359160.cos.ap-beijing.myqcloud.com/test/%MA5OURUF</a>}(PO5C%MNS6{AM.png)</p>\n</li>\n<li>\n<p>复杂的状态管理<br>\n JavaScript 需要管理的状态越来越多，越来越复杂，这些状态包括服务器返回的数据、缓存数据、用户操作产生的数据等等，也包括一些 UI 的状态，比如某些元素是否被选中，是否显示加载动效，当前分页；<br>\n 当我们的应用遇到多个组件共享状态时，单向数据流的简洁性很容易被破坏；<br>\n 对于一些简单的状态，确实可以通过 props 的传递或者 Provide 的方式来共享状态，但是对于复杂的状态管理来说，显然单纯通过传递和共享的方式是不足以解决问题的，比如兄弟组件如何共享数据呢？</p>\n</li>\n</ul>\n<h2 id=\"路由过渡动效\"><a class=\"markdownIt-Anchor\" href=\"#路由过渡动效\">#</a> 路由过渡动效</h2>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-view</span> #<span class=\"attr\">default</span>=<span class=\"string\">&quot;&#123;route,Component&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">transition</span> <span class=\"attr\">:enter-active-class</span>=<span class=\"string\">&quot;`animate__animated $&#123;route.meta.transition&#125;`&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">:is</span>=<span class=\"string\">&quot;Component&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">transition</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面的用法会对所有的路由使用相同的过渡。如果你想让每个路由的组件有不同的过渡，你可以将元信息和动态的 name 结合在一起，放在<transition> 上：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">declare <span class=\"variable language_\">module</span> <span class=\"string\">&#x27;vue-router&#x27;</span>&#123;</span><br><span class=\"line\">     interface <span class=\"title class_\">RouteMeta</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">title</span>:string,</span><br><span class=\"line\">        <span class=\"attr\">transition</span>:string,</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(<span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">env</span>.<span class=\"property\">BASE_URL</span>),</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;@/views/Login.vue&#x27;</span>),</span><br><span class=\"line\">      <span class=\"attr\">meta</span>:&#123;</span><br><span class=\"line\">         <span class=\"attr\">title</span>:<span class=\"string\">&quot;登录页面&quot;</span>,</span><br><span class=\"line\">         <span class=\"attr\">transition</span>:<span class=\"string\">&quot;animate__fadeInUp&quot;</span>,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/index&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;@/views/Index.vue&#x27;</span>),</span><br><span class=\"line\">      <span class=\"attr\">meta</span>:&#123;</span><br><span class=\"line\">         <span class=\"attr\">title</span>:<span class=\"string\">&quot;首页！！！&quot;</span>,</span><br><span class=\"line\">         <span class=\"attr\">transition</span>:<span class=\"string\">&quot;animate__bounceIn&quot;</span>,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"滚动行为\"><a class=\"markdownIt-Anchor\" href=\"#滚动行为\">#</a> 滚动行为</h2>\n<p>使用前端路由，当切换到新路由时，想要页面滚到顶部，或者是保持原先的滚动位置，就像重新加载页面那样。vue-router 可以自定义路由切换时页面如何滚动。<br>\n当创建一个 Router 实例，你可以提供一个 scrollBehavior 方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">…………</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  routes,</span><br><span class=\"line\">  <span class=\"attr\">scrollBehavior</span>: <span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, savePosition</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(to, <span class=\"string\">&#x27;==============&gt;&#x27;</span>, savePosition);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">r</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">r</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">top</span>:<span class=\"number\">10000</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;,<span class=\"number\">2000</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>scrollBehavior 方法接收 to 和 from 路由对象。第三个参数 savedPosition 当且仅当 popstate 导航 (通过浏览器的 前进 / 后退 按钮触发) 时才可用。<br>\nscrollBehavior 返回滚动位置的对象信息，长这样： <code>&#123; left: number, top: number &#125;</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  routes,</span><br><span class=\"line\">  <span class=\"attr\">scrollBehavior</span>: <span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, savePosition</span>) =&gt;</span> &#123;\\</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">       <span class=\"attr\">top</span>:<span class=\"number\">200</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "VueRouter",
                "路由"
            ]
        }
    ]
}