<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Eucli • Posts by &#34;linux&#34; tag</title>
        <link>https://eucli.top</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Mon, 29 May 2023 18:20:34 +0800</pubDate>
        <lastBuildDate>Mon, 29 May 2023 18:20:34 +0800</lastBuildDate>
        <category>JavaScript</category>
        <category>css</category>
        <category>HTML</category>
        <category>MATLAB</category>
        <category>Nginx</category>
        <category>Node.js</category>
        <category>TypeScript</category>
        <category>axios二次封装</category>
        <category>Element Plus</category>
        <category>VueRouter</category>
        <category>路由</category>
        <category>vue3</category>
        <category>pinia</category>
        <category>vite</category>
        <category>electron</category>
        <category>小技巧</category>
        <category>自动化</category>
        <category>Vue</category>
        <category>异步</category>
        <category>uni-app</category>
        <category>VueUse</category>
        <category>杂谈</category>
        <category>Linux</category>
        <category>ROOT</category>
        <category>日常</category>
        <item>
            <guid isPermalink="true">https://eucli.top/2023/05/29/%E6%9C%8D%E5%8A%A1%E7%AB%AF/</guid>
            <title>服务端</title>
            <link>https://eucli.top/2023/05/29/%E6%9C%8D%E5%8A%A1%E7%AB%AF/</link>
            <category>Nginx</category>
            <category>Linux</category>
            <pubDate>Mon, 29 May 2023 18:20:34 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;学习-pm2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#学习-pm2&#34;&gt;#&lt;/a&gt; 学习 pm2&lt;/h1&gt;
&lt;h2 id=&#34;pm2-node-应用进程管理器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pm2-node-应用进程管理器&#34;&gt;#&lt;/a&gt; PM2 Node 应用进程管理器&lt;/h2&gt;
&lt;p&gt;pm2 是 node 进程管理工具，可以利用它来简化很多 node 应用管理的繁琐任务，如性能监控、自动重启、负载均衡等，因为在工作中遇到服务器重启后，需要一个个去重新启动每个服务，这样不仅繁琐、效率低，而且容易遗忘开启一些服务。&lt;/p&gt;
&lt;h2 id=&#34;pm2-的主要特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pm2-的主要特性&#34;&gt;#&lt;/a&gt; PM2 的主要特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;内建负载均衡（使用 Node cluster 集群模块）&lt;/li&gt;
&lt;li&gt;后台运行&lt;/li&gt;
&lt;li&gt;0 秒停机重载&lt;/li&gt;
&lt;li&gt;具有 Ubuntu 和 CentOS 的启动脚本&lt;/li&gt;
&lt;li&gt;停止不稳定的进程（避免无限循环）&lt;/li&gt;
&lt;li&gt;控制台检测&lt;/li&gt;
&lt;li&gt;提供 HTTP API&lt;/li&gt;
&lt;li&gt;远程控制和实时的接口 API (Nodejs 模块，允许和 PM2 进程管理器交互)&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;安装 &amp;amp; 目录&lt;br&gt;
运行以下命令进行全局安装：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install -g pm2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;常用命令&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;启动命令&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 start app.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;命令行参数&lt;br&gt;
我们可以在最基本的启动命令后面，添加一些参数选项，去满足我们的需求，常用的参数选项如下所示：&lt;br&gt;
–watch：监听应用目录的变化，一旦发生变化，自动重启。&lt;br&gt;
-i or --instance：启用多少个实例，可用于负载均衡，如果 -i 0 或者 -i max，则根据当前机器核数确定实例数目。&lt;br&gt;
–ignore-watch：排除监听的目录或文件，可以是特定的文件名，也可以是正则。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们在启动命令后面加入以上的一些参数，完整的启动命令如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pm2 start app.js --watch -i max -n xiaoman&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;重启命令&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 restart app.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;停止命令&lt;br&gt;
停止特定的应用，可以通过 pm2 list 先获取应用的名字或者进程的 id，然后再调用以下命令停止相应的应用；&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 stop app_name | app_id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果需要停止全部的应用，则使用以下命令：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 stop all&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;删除命令&lt;br&gt;
删除特定的应用，可以通过 pm2 list 先获取应用的名字或者进程的 id，然后再调用以下命令删除相应的应用；&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 delete app_name | app_id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果需要删除全部的应用，则使用以下命令：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 delete all&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;查看有哪些进程&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置文件&#34;&gt;#&lt;/a&gt; 配置文件&lt;/h2&gt;
&lt;p&gt;如果我们使用命令行参数定义一些选项，那么每次启动进程时，都需要敲上一大堆的命令，非常繁琐；所以我们可以使用配置文件来将命令行参数进行配置，配置文件里的配置项跟命令行参数是基本一致的；如下所示 pm2 的配置文件 pm2.json ，然后在 package.json 文件中配置启动命令 “pm2”: “pm2 start pm2.json” ，这样我们只需要运行 npm run pm2 就可以使用 pm2 启动我们的 express 项目，并且相关运行参数直接在 pm2.json 中配置好了。相关配置项表示的意义在下面文件中都已经注释说明&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;apps&amp;quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;express_project&amp;quot;&lt;/span&gt;,       &lt;span class=&#34;comment&#34;&gt;// 项目名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;script&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;app.js&amp;quot;&lt;/span&gt;,              &lt;span class=&#34;comment&#34;&gt;// 执行文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;cwd&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;./&amp;quot;&lt;/span&gt;,                     &lt;span class=&#34;comment&#34;&gt;// 根目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;args&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,                      &lt;span class=&#34;comment&#34;&gt;// 传递给脚本的参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;interpreter&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,               &lt;span class=&#34;comment&#34;&gt;// 指定的脚本解释器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;interpreter_args&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,          &lt;span class=&#34;comment&#34;&gt;// 传递给解释器的参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;watch&amp;quot;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,                   &lt;span class=&#34;comment&#34;&gt;// 是否监听文件变动然后重启&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;ignore_watch&amp;quot;&lt;/span&gt;: [                &lt;span class=&#34;comment&#34;&gt;// 不用监听的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;node_modules&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;public&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;exec_mode&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;cluster_mode&amp;quot;&lt;/span&gt;,     &lt;span class=&#34;comment&#34;&gt;// 应用启动模式，支持 fork 和 cluster 模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;instances&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;max&amp;quot;&lt;/span&gt;,              &lt;span class=&#34;comment&#34;&gt;// 应用启动实例个数，仅在 cluster 模式有效 默认为 fork&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;error_file&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;./logs/app-err.log&amp;quot;&lt;/span&gt;,         &lt;span class=&#34;comment&#34;&gt;// 错误日志文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;out_file&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;./logs/app-out.log&amp;quot;&lt;/span&gt;,           &lt;span class=&#34;comment&#34;&gt;// 正常日志文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;merge_logs&amp;quot;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,                         &lt;span class=&#34;comment&#34;&gt;// 设置追加日志而不是新建日志&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;log_date_format&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;YYYY-MM-DD HH:mm:ss&amp;quot;&lt;/span&gt;,   &lt;span class=&#34;comment&#34;&gt;// 指定日志文件的时间格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;min_uptime&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;60s&amp;quot;&lt;/span&gt;,                        &lt;span class=&#34;comment&#34;&gt;// 应用运行少于时间被认为是异常启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;max_restarts&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;,                         &lt;span class=&#34;comment&#34;&gt;// 最大异常重启次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;autorestart&amp;quot;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,                        &lt;span class=&#34;comment&#34;&gt;// 默认为 true, 发生异常的情况下自动重启&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;restart_delay&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;60&amp;quot;&lt;/span&gt;                       &lt;span class=&#34;comment&#34;&gt;// 异常重启情况下，延时重启时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;env&amp;quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;string&#34;&gt;&amp;quot;NODE_ENV&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;production&amp;quot;&lt;/span&gt;,                &lt;span class=&#34;comment&#34;&gt;// 环境参数，当前指定为生产环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;string&#34;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;env_dev&amp;quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;NODE_ENV&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;development&amp;quot;&lt;/span&gt;,              &lt;span class=&#34;comment&#34;&gt;// 环境参数，当前指定为开发环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;env_test&amp;quot;&lt;/span&gt;: &amp;#123;                               &lt;span class=&#34;comment&#34;&gt;// 环境参数，当前指定为测试环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;NODE_ENV&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;REMOTE_ADDR&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;高阶应用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#高阶应用&#34;&gt;#&lt;/a&gt; 高阶应用&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;负载均衡&lt;br&gt;
可以使用 -i 参数配置集群数，实现负载均衡，相关命令如下&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 start app.js -i 3 // 开启三个进程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 start app.js -i max // 根据机器CPU核数，开启对应数目的进程&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;日志查看&lt;br&gt;
我们可以通过打开日志文件查看日志外，还可以通过 pm2 logs 来查看实时日志，这点有对于线上问题排查；日志查看命令如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 logs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;监控&lt;br&gt;
我们可以使用以下命令，查看当前通过 pm2 运行的进程的状态；&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ pm2 monit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;linux&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux&#34;&gt;#&lt;/a&gt; Linux&lt;/h1&gt;
&lt;h2 id=&#34;认识-linux&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#认识-linux&#34;&gt;#&lt;/a&gt; 认识 Linux&lt;/h2&gt;
&lt;p&gt;是一个基于 POSIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。它能运行主要的 Unix 工具软件、应用程序和网络协议。它支持 32 位和 64 位硬件。Linux 继承了 Unix 以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用 SSH 连接服务器&lt;br&gt;
 window 安装 SSH（安装地址） &lt;a href=&#34;http://www.mls-software.com/opensshd.html&#34;&gt;mls-software.com&lt;/a&gt;&lt;br&gt;
Macbook 免安装自带&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用方式&lt;br&gt;
打开终端，输入：&lt;br&gt;
 &lt;code&gt;ssh  账号默认root@服务器地址&lt;/code&gt; &lt;br&gt;
例子：  &lt;code&gt;ssh root@123.456.789&lt;/code&gt;  然后选择 Y ，然后输入密码即可&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本命令&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ls&lt;/code&gt;  : 用来查看当前的目录的文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt;  : 用来切换目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wget&lt;/code&gt;  : 用来下载一些东西&lt;br&gt;
下载 nodejs:  &lt;code&gt;wget https://cdn.npmmirror.com/binaries/node/v14.19.1/node-v14.19.1-linux-x64.tar.xz&lt;/code&gt; &lt;br&gt;
 下载完成后解压，使用 &lt;code&gt;tar&lt;/code&gt;  命令：&lt;/li&gt;
&lt;li&gt;-c: 压缩&lt;/li&gt;
&lt;li&gt;-x：解压&lt;/li&gt;
&lt;li&gt;-t：查看内容&lt;/li&gt;
&lt;li&gt;-r：向压缩归档文件末尾追加文件&lt;/li&gt;
&lt;li&gt;-u：更新原压缩包中的文件&lt;br&gt;
这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的:&lt;/li&gt;
&lt;li&gt;-z：有 gzip 属性的&lt;/li&gt;
&lt;li&gt;-j：有 bz2 属性的&lt;/li&gt;
&lt;li&gt;-Z：有 compress 属性的&lt;/li&gt;
&lt;li&gt;-v：显示所有过程&lt;/li&gt;
&lt;li&gt;-O：将文件解开到标准输出&lt;br&gt;
下面的参数 - f 是必须的:-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;tar -xf all.tar&lt;/code&gt; : 这条命令是解出 all.tar 包中所有文件，-x 是解开的意思&lt;br&gt;
 &lt;code&gt;tar -cf all.tar *.jpg&lt;/code&gt;  这条命令是将所有.jpg 的文件打成一个名为 all.tar 的包。-c 是表示产生新的包，-f 指定包的文件名。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;配置环境变量&lt;br&gt;
 &lt;code&gt;pwd&lt;/code&gt;  用于显示工作目录&lt;br&gt;
使用 pwd 命令获取 node bin 的位置&lt;br&gt;
前往根目录下面的 etc/profile 此文件涉及系统的环境，即环境变量相关。这里修改会对所有用户起作用&lt;br&gt;
使用 vi 命令编辑该文件 vi profile&lt;br&gt;
 然后按一下 I 键 进入编辑模式&lt;br&gt;
在最后一行添加： &lt;code&gt;export PATH=$PATH:你的目录/node-v14.19.1-linux-x64/bin&lt;/code&gt; &lt;br&gt;
 然后执行 source profile 或者重启 linux&lt;br&gt;
 配置淘宝代理 npm config set registry &lt;a href=&#34;https://registry.npm.taobao.org&#34;&gt;https://registry.npm.taobao.org&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;linux-文件属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-文件属性&#34;&gt;#&lt;/a&gt; Linux 文件属性&lt;/h2&gt;
&lt;h3 id=&#34;ls-l-查看文件属性信息可简写为ll&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ls-l-查看文件属性信息可简写为ll&#34;&gt;#&lt;/a&gt;  &lt;code&gt;ls -l&lt;/code&gt;  查看文件属性信息 (可简写为 &lt;code&gt;ll&lt;/code&gt; )&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;首字母作用&lt;br&gt;
文件的开头对应是 -&lt;br&gt;
 目录开头对应的是 d&lt;br&gt;
 快捷方式对应的是 l&lt;br&gt;
U 盘对应的是 b&lt;br&gt;
 鼠标键盘等硬件对应的 c&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;rwx&lt;/code&gt; : 读 | 写 | 可执行，每三个一组（该文件创建者，该文件所在的用户组，其他用户权限）&lt;br&gt;
 &lt;code&gt;-&lt;/code&gt;  为缺少权限，如缺少 “可执行” 权限，则为 &lt;code&gt;rw-&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux-权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-权限&#34;&gt;#&lt;/a&gt; Linux 权限&lt;/h2&gt;
&lt;p&gt;RWX 分别是可读 可写 可执行权限，这个权限我们可以修改使用 chmod 777 文件名&lt;br&gt;
我们先学习一组规律：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;读 ------R 对应数字 4&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;写 ------W 对应数字 2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可执行 -----X 对应数字 1&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以 7 就是可读可写可执行权限&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
